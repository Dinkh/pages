"use strict";(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[8334],{8334:(e,t,a)=>{a.r(t),a.d(t,{default:()=>w});var r=a(4350),l=a(7984),i=a(7613),n=a(2281);class o extends n.Z{static getConfig(){return{className:"Covid.model.HistoricalData",fields:[{name:"active",type:"int"},{name:"cases",type:"int"},{name:"date",type:"string"},{name:"dailyActive",type:"int"},{name:"dailyCases",type:"int"},{name:"dailyDeaths",type:"int"},{name:"dailyRecovered",type:"int"},{name:"deaths",type:"int"},{name:"recovered",type:"int"}]}}}Neo.applyClassConfig(o);const s=o;var d=a(5959);class c extends d.Z{static getConfig(){return{className:"Covid.store.HistoricalData",keyProperty:"date",model:s,sorters:[{property:"date",direction:"DESC"}]}}}Neo.applyClassConfig(c);const h=c;var u=a(1940);class m extends i.Z{static getConfig(){return{className:"Covid.view.country.HistoricalDataTable",cls:["covid-historical-data-table","neo-table-container"],columnDefaults:{align:"right",defaultSortDirection:"DESC",renderer:u.Z.formatNumber},columns:[{align:"left",dataField:"date",dock:"left",text:"Date",width:100,renderer:function(e){return{cls:["neo-date-column","neo-table-cell"],html:new Intl.DateTimeFormat("default",{day:"numeric",month:"numeric",year:"numeric"}).format(new Date(e.value))}}},{dataField:"cases",text:"Cases",renderer:e=>u.Z.formatNumber(e)},{dataField:"active",text:"Active",renderer:e=>u.Z.formatNumber(e,"#64B5F6")},{dataField:"recovered",text:"Recovered",renderer:e=>u.Z.formatNumber(e,"#28ca68")},{dataField:"deaths",text:"Deaths",renderer:e=>u.Z.formatNumber(e,"#fb6767")},{dataField:"dailyCases",text:"Daily C",renderer:e=>u.Z.formatNumber(e)},{dataField:"dailyActive",text:"Daily A",renderer:e=>u.Z.formatNumber(e,"#64B5F6")},{dataField:"dailyRecovered",text:"Daily R",renderer:e=>u.Z.formatNumber(e,"#28ca68")},{dataField:"dailyDeaths",text:"Daily D",renderer:e=>u.Z.formatNumber(e,"#fb6767")}],store:h}}}Neo.applyClassConfig(m);const f=m;var p=a(7918);class y extends p.Z{static getConfig(){return{className:"Covid.view.country.LineChartComponent",cls:["covid-line-chart"],chartConfig:{cursor:{maxTooltipDistance:-1},legend:{labels:{template:{fill:"#bbb"}}},xAxes:[{type:"DateAxis",renderer:{minGridDistance:60,labels:{template:{fill:"#bbb"}}}}],yAxes:[{type:"ValueAxis",logarithmic:!0,numberFormatter:{numberFormat:"#.0a",bigNumberPrefixes:[{number:1e3,suffix:"K"},{number:1e6,suffix:"M"},{number:1e9,suffix:"B"}]},renderer:{minGridDistance:60,labels:{template:{fill:"#bbb"}}}}],series:[{type:"LineSeries",dataFields:{dateX:"date",valueY:"active"},fill:"#64b5f6",name:"Active",stroke:"#64b5f6",strokeWidth:3,tooltip:{background:{fill:"#fff"},getFillFromObject:!1,label:{fill:"#000"}}},{type:"LineSeries",dataFields:{dateX:"date",valueY:"cases"},fill:"#bbb",name:"Cases",stroke:"#bbb",strokeWidth:3,tooltip:{background:{fill:"#fff"},getFillFromObject:!1,label:{fill:"#000"}}},{type:"LineSeries",dataFields:{dateX:"date",valueY:"deaths"},fill:"#fb6767",name:"Deaths",stroke:"#fb6767",strokeWidth:3,tooltip:{background:{fill:"#fff"},getFillFromObject:!1,label:{fill:"#000"}}},{type:"LineSeries",dataFields:{dateX:"date",valueY:"recovered"},fill:"#28ca68",name:"Recovered",stroke:"#28ca68",strokeWidth:3,tooltip:{background:{fill:"#fff"},getFillFromObject:!1,label:{fill:"#000"}}}]},combineSeriesTooltip:!0,fitParentHeight:!0}}}Neo.applyClassConfig(y);const b=y;var g=a(3921),C=a(1722),v=a(5542),x=a(4041);class D extends i.Z{static getConfig(){return{className:"Covid.view.country.Table",bind:{country:{twoWay:!0,value:e=>e.country}},cls:["covid-country-table","neo-table-container"],columnDefaults:{align:"right",defaultSortDirection:"DESC",renderer:u.Z.formatNumber},columns:[{cls:["neo-index-column","neo-table-header-button"],dataField:"index",dock:"left",minWidth:40,text:"#",renderer:u.Z.indexRenderer,width:40},{align:"left",dataField:"country",defaultSortDirection:"ASC",dock:"left",text:"Country",width:200,renderer:e=>({cls:["neo-country-column","neo-table-cell"],html:['<div style="display: flex; align-items: center">','<img style="height:20px; margin-right:10px; width:20px;" src="'+u.Z.getCountryFlagUrl(e.value)+'">'+e.value,"</div>"].join("")})},{dataField:"cases",text:"Cases"},{dataField:"casesPerOneMillion",text:"Cases / 1M"},{dataField:"infected",text:"Infected",renderer:e=>u.Z.formatInfected(e)},{dataField:"active",text:"Active",renderer:e=>u.Z.formatNumber(e,"#64B5F6")},{dataField:"recovered",text:"Recovered",renderer:e=>u.Z.formatNumber(e,"#28ca68")},{dataField:"critical",text:"Critical",renderer:e=>u.Z.formatNumber(e,"orange")},{dataField:"deaths",text:"Deaths",renderer:e=>u.Z.formatNumber(e,"#fb6767")},{dataField:"todayCases",text:"Cases today"},{dataField:"todayDeaths",text:"Deaths today",renderer:e=>u.Z.formatNumber(e,"#fb6767")},{dataField:"tests",text:"Tests"},{dataField:"testsPerOneMillion",text:"Tests / 1M"}],country_:null,store:x.Z}}afterSetCountry(e,t){if(void 0!==t){let t,a=this,r=a.selectionModel;e?(t=`${a.getView().id}__tr__${e}`,r.isSelected(t)||(r.select(t),a.mounted&&Neo.main.DomAccess.scrollToTableRow({id:t}))):r.deselectAll()}}onDeselect(e){this.country=null}onSelect(e){let t=this,a=e[0]||null;t.store.getCount()>0&&(a&&(a=t.getView().getRecordByRowId(a)?.country),a&&(t.country=a))}}Neo.applyClassConfig(D);const N=D;var F=a(3846),k=a(5328);class R extends F.Z{static getConfig(){return{className:"Covid.view.TableContainerController",apiBaseUrl:"https://disease.sh/",apiHistoricalDataEndpoint:"v3/covid-19/historical/",apiHistoricalDataTimeRange:"all",removeEmptyRecords:!0,selectedRecord:null,table_:null}}addStoreItems(e){let t,a=this,r=[],l={},i=e?.timeline;e&&!e.timeline&&(i=e),i&&(Object.entries(i.cases||{}).forEach((([e,t])=>{"undefined"!==e&&(l[e]={date:new Date(e).toISOString(),cases:t})})),Object.entries(i.deaths||{}).forEach((([e,t])=>{"undefined"!==e&&(l.hasOwnProperty(e)?l[e].deaths=t:l[e]={date:new Date(e).toISOString(),deaths:t})})),Object.entries(i.recovered||{}).forEach((([e,t])=>{"undefined"!==e&&(l.hasOwnProperty(e)?l[e].recovered=t:l[e]={date:new Date(e).toISOString(),recovered:t})})),Object.entries(l).forEach((([e,t])=>{t.active=t.cases-t.deaths-t.recovered,r.push(t)})),a.removeEmptyRecords&&[...r].forEach((e=>{0===e.cases&&k.Z.remove(r,e)})),Object.assign(r[0],{dailyActive:r[0].active,dailyCases:r[0].cases,dailyDeaths:r[0].deaths,dailyRecovered:r[0].recovered}),r.forEach(((e,a)=>{t=r[a+1],t&&Object.assign(t,{dailyActive:t.active-e.active,dailyCases:t.cases-e.cases,dailyDeaths:t.deaths-e.deaths,dailyRecovered:t.recovered-e.recovered})})),a.getReference("historical-data-table").store.data=r,a.updateLineChart(r))}static assignFieldsOrNull(e){return{active:e.active||null,cases:e.cases||null,deaths:e.deaths||null,dailyActive:e.dailyActive||null,dailyCases:e.dailyCases||null,dailyDeaths:e.dailyDeaths||null,dailyRecovered:e.dailyRecovered||null,recovered:e.recovered>0?e.recovered:null}}beforeGetTable(e){return e||(this._table=e=this.getReference("table")),e}loadHistoricalData(e){let t=this,a=t.apiBaseUrl+t.apiHistoricalDataEndpoint+e+"?lastdays="+t.apiHistoricalDataTimeRange;fetch(a).then((e=>e.json())).catch((e=>console.log("Canâ€™t access "+a,e))).then((e=>t.addStoreItems(e)))}on520pxButtonClick(e){this.getReference("controls-panel").width=520}on800pxButtonClick(e){this.getReference("controls-panel").width=800}onCollapseButtonClick(e){let t=this.getReference("controls-panel"),a=40===t.width;t.width=a?this.component.historyPanelWidth:40,e.component.text=a?"X":"+"}onCountryChange(e){let t=this;t.selectedRecord=e?{...e}:null,t.loadHistoricalData(e?.countryInfo?.iso2||"all"),t.getReference("historical-data-label").html="Historical Data ("+(e?.country||"World")+")"}onDailyValuesChange(e){let t=this.getReference("line-chart").id,a=this.getReference("logarithmic-scale-checkbox"),r=e.value;r?a.set({checked:!1,disabled:e.value}):a.disabled=!1,Neo.main.addon.AmCharts.setProperties({id:t,properties:{"series.values.0.dataFields.valueY":r?"dailyActive":"active","series.values.1.dataFields.valueY":r?"dailyCases":"cases","series.values.2.dataFields.valueY":r?"dailyDeaths":"deaths","series.values.3.dataFields.valueY":r?"dailyRecovered":"recovered"}}),Neo.main.addon.AmCharts.callMethod({id:t,path:"invalidateData"})}onLogarithmicScaleChange(e){Neo.main.addon.AmCharts.setProperty({id:this.getReference("line-chart").id,path:"yAxes.values.0.logarithmic",value:e.value})}updateLineChart(e){let t=this,a=t.selectedRecord,r=t.getReference("line-chart");e.forEach((e=>Object.assign(e,R.assignFieldsOrNull(e)))),a||(a=t.getParent().summaryData),a&&e.push({date:(new Date).toISOString(),...R.assignFieldsOrNull(a)}),r.chartData=e}}Neo.applyClassConfig(R);const S=R;class Z extends l.Z{static getConfig(){return{className:"Covid.view.TableContainer",bind:{countryRecord:e=>e.countryRecord},controller:S,countryRecord_:null,historyPanelWidth:520,table:null,tableConfig:null,layout:{ntype:"hbox",align:"stretch"},items:[{ntype:"container",flex:1,layout:"fit",items:[]},{module:C.Z},{module:g.Z,cls:["neo-configuration-panel","neo-panel","neo-container"],layout:{ntype:"vbox",align:"stretch"},reference:"controls-panel",style:{backgroundColor:"#2b2b2b"},width:"@config:historyPanelWidth",containerConfig:{flex:null,style:{overflowY:"scroll"}},headers:[{dock:"top",items:[{ntype:"button",handler:"onCollapseButtonClick",text:"X"},{ntype:"label",reference:"historical-data-label",text:"Historical Data"},"->",{ntype:"button",handler:"on520pxButtonClick",text:"520px"},{ntype:"button",handler:"on800pxButtonClick",text:"800px"}]}],items:[{module:v.Z,style:{marginTop:"10px"},items:[{ntype:"container",layout:{ntype:"vbox",align:"stretch"},items:[{ntype:"toolbar",flex:"0 1 auto",items:[{module:r.Z,checked:!0,labelText:"Logarithmic Scale",labelWidth:135,reference:"logarithmic-scale-checkbox",listeners:{change:"onLogarithmicScaleChange"}},{module:r.Z,labelText:"Daily Values",style:{marginLeft:"30px"},labelWidth:95,listeners:{change:"onDailyValuesChange"}}]},{module:b,flex:1,reference:"line-chart"}],tabButtonConfig:{iconCls:"fa fa-chart-line",text:"Chart"}}]}]}]}}construct(e){super.construct(e);let t=this;t.historicalDataTable=Neo.create({module:f,appName:t.appName,parentId:t.id,reference:"historical-data-table",tabButtonConfig:{iconCls:"fa fa-table",text:"Table"},...t.historicalDataTableConfig}),t.items[2].items[0].items.push(t.historicalDataTable),t.table=Neo.create({module:N,appName:t.appName,parentId:t.id,reference:"table",...t.tableConfig}),t.items[0].items.push(t.table)}afterSetCountryRecord(e,t){setTimeout((()=>{this.controller.onCountryChange(e)}),this.isConstructed?0:50)}}Neo.applyClassConfig(Z);const w=Z},7918:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(4022);a(8041);class l extends r.Z{static getConfig(){return{className:"Neo.component.wrapper.AmChart",ntype:"am-chart",chartConfig_:null,chartType:"XYChart",combineSeriesTooltip:!1,chartData_:null,dataPath:"",package:"am4charts",_vdom:{style:{position:"relative",height:"100%",width:"100%"},cn:[{style:{position:"absolute",height:"100%",width:"100%"},cn:[{style:{color:"red",height:"100%"}}]}]}}}afterSetChartData(e,t){let a=this;e&&Neo.main.addon.AmCharts.updateData({appName:a.appName,data:e,dataPath:a.dataPath,id:a.id})}afterSetMounted(e,t){let a=this;if(!1===e&&void 0!==t&&Neo.main.addon.AmCharts.destroy({appName:a.appName,id:a.id}),super.afterSetMounted(e,t),e){let e={appName:a.appName,combineSeriesTooltip:a.combineSeriesTooltip,config:a.chartConfig,id:a.id,package:a.package,type:a.chartType};a.chartData&&(e.data=a.chartData,e.dataPath=a.dataPath),setTimeout((()=>{Neo.main.addon.AmCharts.create(e).then(a.onChartMounted)}),50)}}beforeSetChartConfig(e,t){return e||console.error("wrapper.AmChart defined without a chartConfig",this.id),this.parseItemConfigs(e),e}getVdomRoot(){return this.vdom.cn[0].cn[0]}getVnodeRoot(){return this.vnode.childNodes[0].childNodes[0]}onChartMounted(){}}Neo.applyClassConfig(l);const i=l},3921:(e,t,a)=>{a.d(t,{Z:()=>i});var r=a(7984);a(5031);class l extends r.Z{static getConfig(){return{className:"Neo.container.Panel",ntype:"panel",cls:["neo-panel","neo-container"],containerConfig:null,headerDefaults:null,headers:null,_layout:{ntype:"vbox",align:"stretch"},verticalHeadersFirst:!1}}construct(e){super.construct(e);let t=this;t.hasHeaders()&&!0===t.verticalHeadersFirst&&(t.layout={ntype:"hbox",align:"stretch"})}static createHeaderConfig(e){if("NeoInstance"===Neo.typeOf(e))return e;let t={ntype:"toolbar",cls:["neo-panel-header-toolbar","neo-toolbar"],flex:"0 1 auto"};return e.text&&(t.items=[{ntype:"label",cls:["neo-panel-header-text","neo-label"],text:e.text}],delete e.text),Array.isArray(e.items)&&e.items.forEach((e=>{"label"===e.ntype&&(e.cls=["neo-panel-header-text","neo-label"])})),{...t,...e}}createItems(){let e=this,t=e.containerConfig;if(e.hasHeaders()){let a,r=!1===e.verticalHeadersFirst,i=e.headers||[],n=i.filter((e=>e.dock===(r?"bottom":"right"))),o=i.filter((e=>e.dock===(r?"left":"top"))),s=i.filter((e=>e.dock===(r?"right":"bottom"))),d=i.filter((e=>e.dock===(r?"top":"left"))),c=n.length>0||d.length>0,h=o.length>0||s.length>0,u=e.items,m=[],f=[];d.forEach((e=>{f.push(l.createHeaderConfig(e))})),h&&(r&&c||!r&&c)?(o.forEach((e=>{m.push(l.createHeaderConfig(e))})),a={ntype:"container",flex:1,items:u,itemDefaults:e.itemDefaults,...t},m.push({...e.headerDefaults,...a}),s.forEach((e=>{m.push(l.createHeaderConfig(e))})),f.push({ntype:"container",items:m,layout:{ntype:r?"hbox":"vbox",align:"stretch"}})):(a={ntype:"container",flex:1,items:u,itemDefaults:e.itemDefaults,...t},f.push({...e.headerDefaults,...a})),n.forEach((e=>{f.push(l.createHeaderConfig(e))})),e.items=f,e.itemDefaults=null,super.createItems()}else t&&e.set(t),super.createItems()}hasHeaders(){return Array.isArray(this.headers)&&this.headers.length>0}}Neo.applyClassConfig(l);const i=l}}]);