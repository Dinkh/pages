(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[7728],{7728:(e,l,t)=>{"use strict";t.r(l),t.d(l,{onStart:()=>r});var a=t(7875),n=t(1650),o=t(7177),i=t(9840),d=t(5177),s=t(5062);class c extends n.Z{static getConfig(){return{className:"Neo.examples.form.field.trigger.copyToClipboard.MainContainer",autoMount:!0,configItemLabelWidth:160,layout:{ntype:"hbox",align:"stretch"}}}createConfigurationComponents(){let e=this;return[{module:a.Z,checked:e.exampleComponent.showOnHover,labelText:"showOnHover",listeners:{change:e.onConfigChange.bind(e,"showOnHover")}},{module:d.Z,checked:"top"===e.exampleComponent.labelPosition,hideValueLabel:!1,labelText:"labelPosition",listeners:{change:e.onRadioChange.bind(e,"labelPosition","top")},name:"labelPosition",style:{marginTop:"10px"},valueLabelText:"top"},{module:d.Z,checked:"right"===e.exampleComponent.labelPosition,hideValueLabel:!1,labelText:"",listeners:{change:e.onRadioChange.bind(e,"labelPosition","right")},name:"labelPosition",valueLabelText:"right"},{module:d.Z,checked:"bottom"===e.exampleComponent.labelPosition,hideValueLabel:!1,labelText:"",listeners:{change:e.onRadioChange.bind(e,"labelPosition","bottom")},name:"labelPosition",valueLabelText:"bottom"},{module:d.Z,checked:"left"===e.exampleComponent.labelPosition,hideValueLabel:!1,labelText:"",listeners:{change:e.onRadioChange.bind(e,"labelPosition","left")},name:"labelPosition",valueLabelText:"left"},{module:d.Z,checked:"inline"===e.exampleComponent.labelPosition,hideValueLabel:!1,labelText:"",listeners:{change:e.onRadioChange.bind(e,"labelPosition","inline")},name:"labelPosition",valueLabelText:"inline"},{module:s.Z,labelText:"labelText",listeners:{change:e.onConfigChange.bind(e,"labelText")},style:{marginTop:"10px"},value:e.exampleComponent.labelText},{module:i.Z,labelText:"labelWidth",listeners:{change:e.onConfigChange.bind(e,"labelWidth")},maxValue:200,minValue:50,stepSize:5,value:e.exampleComponent.labelWidth},{module:s.Z,clearable:!0,labelText:"placeholderText",listeners:{change:e.onConfigChange.bind(e,"placeholderText")},value:e.exampleComponent.placeholderText},{module:a.Z,checked:e.exampleComponent.required,labelText:"required",listeners:{change:e.onConfigChange.bind(e,"required")},style:{marginTop:"10px"}},{module:i.Z,labelText:"width",listeners:{change:e.onConfigChange.bind(e,"width")},maxValue:300,minValue:50,stepSize:5,style:{marginTop:"10px"},value:e.exampleComponent.width}]}createExampleComponent(){return Neo.create(s.Z,{autoRender:!1,clearable:!0,showOnHover:!0,labelText:"Label",labelWidth:70,triggers:[o.Z],value:"Hello World",width:200})}}Neo.applyClassConfig(c);const r=()=>Neo.app({mainView:c,name:"Neo.examples.form.field.trigger.copyToClipboard"})},7875:(e,l,t)=>{"use strict";t.d(l,{Z:()=>n});var a=t(2232);class n extends a.Z{static getConfig(){return{className:"Neo.form.field.CheckBox",ntype:"checkboxfield",checked_:!1,cls:["neo-checkboxfield"],enableLabelClicks_:!0,hideLabel_:!1,hideValueLabel_:!0,inputType_:"checkbox",labelText_:"LabelText",labelWidth_:150,name_:"",valueLabelText_:"ValueLabel",_vdom:{cn:[{tag:"label",cls:["neo-checkbox-label"]},{tag:"input",cls:["neo-checkbox-input"]},{tag:"label",cls:["neo-checkbox-value-label"]}]}}}constructor(e){super(e);let l=this,t=l.domListeners;t.push({change:l.onInputValueChange,scope:l}),l.domListeners=t}afterSetChecked(e,l){let t=this,a=t.vdom;a.cn[1].checked=e,t.vdom=a,void 0!==l&&t.fire("change",{component:t,oldValue:l,value:e})}afterSetEnableLabelClicks(e,l){let t=this,a=t.vdom,n=a.cn[2];e?n.for=t.getInputElId():delete n.for,t.vdom=a}afterSetHideLabel(e,l){let t=this.vdom;t.cn[0].removeDom=e,this.vdom=t}afterSetHideValueLabel(e,l){let t=this.vdom;t.cn[2].removeDom=e,this.vdom=t}afterSetId(e,l){let t=this,a=t.vdom;a.cn[0].id=t.getLabelId(),a.cn[1].id=t.getInputElId(),a.cn[2].id=t.getValueLabelId(),super.afterSetId(e,l)}afterSetInputType(e,l){let t=this.vdom;t.cn[1].type=e,this.vdom=t}afterSetLabelText(e,l){let t=this.vdom;t.cn[0].innerHTML=e,this.vdom=t}afterSetLabelWidth(e,l){let t=this,a=t.vdom;t.hideLabel||(a.cn[0].width=e,t.vdom=a)}afterSetName(e,l){let t=this.vdom;t.cn[1].name=e,this.vdom=t}afterSetValue(e,l){if(e){let l=this.vdom;l.cn[1].value=e,this.vdom=l}super.afterSetValue(e,l)}afterSetValueLabelText(e,l){let t=this,a=t.vdom;t.hideValueLabel||(a.cn[2].innerHTML=e,t.vdom=a)}getInputElId(){return`${this.id}__input`}getLabelId(){return`${this.id}__label`}getValueLabelId(){return`${this.id}__value-label`}onInputValueChange(e){let l=this,t=e.target.checked;l._checked=t,l.vdom.cn[1].checked=t,l.vnode.childNodes[l.hideLabel?0:1].attributes.checked=`${t}`,l.fire("change",{component:l,oldValue:!t,value:t})}}Neo.applyClassConfig(n)},5177:(e,l,t)=>{"use strict";t.d(l,{Z:()=>o});var a=t(7875),n=t(9342);class o extends a.Z{static getConfig(){return{className:"Neo.form.field.Radio",ntype:"radiofield",cls:["neo-radiofield"],inputType:"radio",_vdom:{cn:[{tag:"label",cls:["neo-radio-label"]},{tag:"input",cls:["neo-radio-input"]},{tag:"label",cls:["neo-radio-value-label"]}]}}}afterSetChecked(e,l){super.afterSetChecked(e,l),e&&this.uncheckGroupItems()}onInputValueChange(e){super.onInputValueChange(e),this.uncheckGroupItems()}uncheckGroupItems(){let e,l=this;e=n.Z.find({ntype:"radiofield",name:l.name}),e.forEach((e=>{e.id!==l.id&&e._checked&&(e._checked=!1,e.vdom.cn[1].checked=!1,e.vnode&&(e.vnode.childNodes[l.hideLabel?0:1].attributes.checked="false"),e.fire("change",{component:l,oldValue:!0,value:!1}))}))}}Neo.applyClassConfig(o)},7177:(e,l,t)=>{"use strict";t.d(l,{Z:()=>o});var a=t(877),n=t(3501);class o extends a.Z{static getConfig(){return{className:"Neo.form.field.trigger.CopyToClipboard",ntype:"trigger-copytoclipboard",cls:["neo-field-trigger","neo-trigger-clipboard"],iconCls:"fa fa-clipboard",showOnHover:!0,type:"copyToClipboard",weight:21}}afterSetHidden(e,l){let t=this.cls;n.Z[e?"add":"remove"](t,"neo-is-hidden"),this.cls=t}getHiddenState(){return!this.field.value||0===this.field.value.length}onConstructed(){super.onConstructed();let e=this;e.field.on({change:e.onFieldChange,constructed:e.onFieldChange,scope:e}),e.hidden=e.getHiddenState()}onFieldChange(e){this.hidden=this.getHiddenState()}onTriggerClick(e){Neo.main.DomAccess.selectNode({id:this.field.getInputEl().id}).then((e=>{Neo.main.DomAccess.execCommand({command:"copy"})}))}}Neo.applyClassConfig(o)}}]);