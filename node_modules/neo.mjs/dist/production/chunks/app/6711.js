(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[6711],{3908:(e,t,a)=>{"use strict";a.d(t,{Z:()=>r});var n=a(2325);class o extends n.Z{static getStaticConfig(){return{flagRegEx:/ /gi,locales:"default"}}static getConfig(){return{className:"Covid.Util"}}static formatInfected(e){let t=e.value;return Neo.isNumber(t)?(t=Math.round(t/100),t/=100,t=t.toFixed(2)+" %",t.toLocaleString(o.locales)):t||"N/A"}static formatNumber(e,t){let a=e.value;return Neo.isNumber(a)?(a=a.toLocaleString(o.locales),"string"!=typeof t?a:`<span style="color:${t};">${a}</span>`):a||"N/A"}static getCountryFlagUrl(e){let t=e.toLowerCase().replace(o.flagRegEx,"-");if(t={bosnia:"bosnia-and-herzegovina","cabo-verde":"cape-verde",car:"central-african-republic","caribbean-netherlands":"netherlands","channel-islands":"jersey","côte-d'ivoire":"ivory-coast",congo:"republic-of-the-congo","congo,-the-democratic-republic-of-the":"democratic-republic-of-congo",curaçao:"curacao",czechia:"czech-republic","diamond-princess":"japan",drc:"democratic-republic-of-congo","el-salvador":"salvador",eswatini:"swaziland","faeroe-islands":"faroe-islands","falkland-islands-(malvinas)":"falkland-islands","french-guiana":"france",guadeloupe:"france","holy-see-(vatican-city-state)":"vatican-city","iran,-islamic-republic-of":"iran","lao-people's-democratic-republic":"laos","libyan-arab-jamahiriya":"libya",macedonia:"republic-of-macedonia","marshall-islands":"marshall-island",mayotte:"france","moldova,-republic-of":"moldova","ms-zaandam":"netherlands","new-caledonia":"france","palestinian-territory,-occupied":"palestine",poland:"republic-of-poland",réunion:"france","s.-korea":"south-korea","st.-barth":"st-barts","saint-helena":"united-kingdom","saint-lucia":"st-lucia","saint-martin":"sint-maarten","saint-pierre-miquelon":"france","saint-vincent-and-the-grenadines":"st-vincent-and-the-grenadines","syrian-arab-republic":"syria","tanzania,-united-republic-of":"tanzania","timor-leste":"east-timor","turks-and-caicos-islands":"turks-and-caicos","u.s.-virgin-islands":"virgin-islands",uae:"united-arab-emirates",uk:"united-kingdom",usa:"united-states-of-america",uzbekistan:"uzbekistn","venezuela,-bolivarian-republic-of":"venezuela","viet-nam":"vietnam","wallis-and-futuna":"france"}[t]||t,Neo.config.isGitHubPages){let e="../../../../resources/images/flaticon/country_flags/png/"+t+".png";return"development"!==Neo.config.environment&&(e="../../"+e),e}return"https://raw.githubusercontent.com/neomjs/pages/master/resources/images/flaticon/country_flags/png/"+t+".png"}static indexRenderer(e){return{cls:["neo-index-column","neo-table-cell"],html:e.index+1}}}Neo.applyClassConfig(o);const r=o},6711:(e,t,a)=>{"use strict";a.r(t),a.d(t,{onStart:()=>h});var n=a(2680);class o extends n.Z{static getConfig(){return{className:"Covid.view.FooterContainer",height:25,layout:{ntype:"hbox"},reference:"footer",style:{overflow:"visible"},itemDefaults:{ntype:"component",cls:["neo-link-color"],style:{fontSize:"13px",padding:"10px",paddingTop:0}},items:[{html:'App created with <a target="_blank" href="https://github.com/neomjs/neo">neo.mjs</a>.'},{flex:1},{html:'Data provided by <a target="_blank" href="https://github.com/disease-sh/API">disease.sh/API</a>.'},{flex:1},{html:'Country Flag Icons made by <a target="_blank" href="https://www.flaticon.com/authors/freepik" title="Freepik">Freepik</a> from <a target="_blank" href="https://www.flaticon.com/" title="Flaticon"> www.flaticon.com</a>.'},{ntype:"button",cls:["neo-button"],handler:"onRemoveFooterButtonClick",height:24,style:{margin:0,marginRight:"10px",marginTop:"-5px"},text:"Remove Footer"}]}}}Neo.applyClassConfig(o);var r=a(5666),i=a(879);class s extends n.Z{static getConfig(){return{className:"Covid.view.HeaderContainer",cls:["covid-header-container"],height:120,layout:{ntype:"hbox",align:"stretch"},items:[{ntype:"component",minWidth:267,reference:"logo",style:{margin:"10px"},width:267,vdom:{tag:"img",src:"https://raw.githubusercontent.com/neomjs/pages/master/resources/images/apps/covid/covid_logo_dark.jpg"}},{ntype:"container",layout:{ntype:"vbox",align:"stretch"},items:[{ntype:"container",height:65,layout:{ntype:"hbox"},reference:"total-stats",itemDefaults:{ntype:"component"},items:[{cls:["covid-numberbox"],vdom:{cn:[{cls:["covid-numberbox-title","cases"],html:"Cases"},{cls:["covid-numberbox-number","cases"]}]}},{cls:["covid-numberbox"],vdom:{cn:[{cls:["covid-numberbox-title","active"],html:"Active"},{cls:["covid-numberbox-number","active"]}]}},{cls:["covid-numberbox"],vdom:{cn:[{cls:["covid-numberbox-title","recovered"],html:"Recovered"},{cls:["covid-numberbox-number","recovered"]}]}},{cls:["covid-numberbox"],vdom:{cn:[{cls:["covid-numberbox-title","deaths"],html:"Deaths"},{cls:["covid-numberbox-number","deaths"]}]}},{flex:1},{style:{padding:"10px"},width:125,vdom:{cn:[{tag:"a","aria-label":"Star neomjs/neo on GitHub",cls:["github-button"],"data-show-count":"true","data-size":"large",href:"https://github.com/neomjs/neo",html:"Star"}]}},{style:{padding:"10px"},width:105,vdom:{cn:[{tag:"a","aria-label":"Sponsor @tobiu on GitHub",cls:["github-button"],"data-icon":"octicon-heart","data-size":"large",href:"https://github.com/sponsors/tobiu",html:"Sponsor"}]}}]},{ntype:"container",layout:{ntype:"hbox"},itemDefaults:{ntype:"component"},items:[{module:i.Z,displayField:"country",flex:"none",height:25,labelPosition:"inline",labelText:"Select a Country",minWidth:140,reference:"country-field",style:{marginTop:"15px"},width:200,listeners:{clear:"onCountryFieldClear",select:"onCountryFieldSelect"},store:{module:r.Z,sorters:[{property:"country",direction:"ASC"}]}},{ntype:"button",flex:"none",handler:"onSwitchThemeButtonClick",height:25,iconCls:"fa fa-sun",style:{marginLeft:"10px",marginTop:"15px"},text:"Theme Light"},{ntype:"button",flex:"none",handler:"onReloadDataButtonClick",height:25,iconCls:"fa fa-sync-alt",style:{marginLeft:"10px",marginTop:"15px"},text:"Reload Data"},{ntype:"label",height:25,reference:"last-update",style:{marginLeft:"10px",marginTop:"18px"},text:""}]}]}]}}}Neo.applyClassConfig(s);var l=a(5354),c=a(3501),d=a(3908);class m extends l.Z{static getConfig(){return{className:"Covid.view.MainContainerController",ntype:"maincontainer-controller",activeMainTabIndex:0,apiSummaryUrl:"https://disease.sh/v3/covid-19/all",apiUrl:"https://disease.sh/v3/covid-19/countries",countryRecord:null,data:null,mainTabs:["table","mapboxglmap","worldmap","gallery","helix","attribution"],mainTabsListeners:[!1,!1,!1,!1,!1,!1],mapboxglMapHasData:!1,summaryData:null,worldMapHasData:!1}}onConstructed(){super.onConstructed();const e=this;e.loadData(),e.loadSummaryData(),e.component.on("mounted",e.onMainViewMounted,e),Neo.config.hash||e.onHashChange({country:"all",hash:{mainView:"table"},hashString:"mainview=table"},null)}addStoreItems(e){const t=this,a=t.getReference("country-field").store,n=t.mainTabs[t.activeMainTabIndex],o=t.getReference(n);e.forEach((e=>{e.country.includes('"')&&(e.country=e.country.replace('"',"'")),e.casesPerOneMillion=e.casesPerOneMillion>e.cases?"N/A":e.casesPerOneMillion||0,e.infected=e.casesPerOneMillion})),t.data=e,a.getCount()<1&&(a.data=e),["gallery","helix","table"].includes(n)?o.store.data=e:"mapboxglmap"===n?(t.getReference("mapboxglmap").data=e,t.mapboxglMapHasData=!0):"worldmap"===n&&(o.loadData(e),t.worldMapHasData=!0)}applySummaryData(e){let t=this,a=t.getReference("total-stats"),n=a.vdom;t.summaryData=e,n.cn[0].cn[1].html=d.Z.formatNumber({value:e.cases}),n.cn[1].cn[1].html=d.Z.formatNumber({value:e.active}),n.cn[2].cn[1].html=d.Z.formatNumber({value:e.recovered}),n.cn[3].cn[1].html=d.Z.formatNumber({value:e.deaths}),a.vdom=n,a=t.getReference("last-update"),n=a.vdom,n.html="Last Update: "+new Intl.DateTimeFormat("default",{hour:"numeric",minute:"numeric",second:"numeric"}).format(new Date(e.updated)),a.vdom=n}clearCountryField(e){this.getReference("country-field").clear()}getTabIndex(e){return e&&e.mainview?this.mainTabs.indexOf(e.mainview):0}getView(e){return this.getReference(this.mainTabs[e])}loadData(){const e=this;fetch(e.apiUrl).then((e=>e.json())).then((t=>e.addStoreItems(t))).catch((t=>console.log("Can’t access "+e.apiUrl,t)))}loadSummaryData(){const e=this;fetch(e.apiSummaryUrl).then((e=>e.json())).then((t=>e.applySummaryData(t))).catch((t=>console.log("Can’t access "+e.apiSummaryUrl,t))),setTimeout((()=>{e.summaryData||e.onLoadSummaryDataFail()}),2e3)}onCountryFieldClear(){this.countryRecord=null,Neo.Main.editRoute({country:null})}onCountryFieldSelect(e){this.countryRecord=e.record,Neo.Main.editRoute({country:e.value})}onHashChange(e,t){let a,n,o=this,r=o.getTabIndex(e.hash),i=e.hash&&e.hash.country,s=o.getReference("country-field"),l=o.getReference("tab-container"),c=o.getView(r),d=o.data?l.activeIndex!==r?100:0:1e3;l.activeIndex=r,o.activeMainTabIndex=r,c?(o.data&&c.store&&c.store.getCount()<1&&(c.store.data=o.data,d=500),1e3===d&&"table-container"===c.ntype&&(d=2e3),"mapboxgl"===c.ntype&&o.data?(o.mapboxglMapHasData||(c.data=o.data,o.mapboxglMapHasData=!0),o.countryRecord&&m.selectMapboxGlCountry(c,o.countryRecord),c.autoResize()):"covid-world-map"===c.ntype&&o.data?o.worldMapHasData||(c.loadData(o.data),o.worldMapHasData=!0):setTimeout((()=>{if(o.data)switch(n=c.selectionModel,i?s.value=i:e.country="all",c.ntype){case"gallery":o.mainTabsListeners[r]||(o.mainTabsListeners[r]=!0,o.getReference("gallery").on("select",o.updateCountryField,o)),i&&!n.isSelected(i)&&n.select(i,!1);break;case"helix":o.mainTabsListeners[r]||(o.mainTabsListeners[r]=!0,o.getReference("helix").on("select",o.updateCountryField,o)),c.getOffsetValues(),i&&!n.isSelected(i)&&(n.select(i,!1),c.onKeyDownSpace(null));break;case"table-container":o.mainTabsListeners[r]||(o.mainTabsListeners[r]=!0,o.getReference("table").on({deselect:o.clearCountryField,select:o.updateCountryField,scope:o})),a=n.getRowId(c.store.indexOf(i)),o.getReference("table-container").fire("countrySelect",{record:c.store.get(i)}),i&&!n.isSelected(a)&&(n.select(a),Neo.main.DomAccess.scrollToTableRow({id:a}))}}),d)):setTimeout((()=>{o.onHashChange(e,t)}),10)}onLoadSummaryDataFail(){const e=this.getReference("table"),t=e.vdom;t.cn[0].cn[1].cn.push({tag:"div",cls:["neo-box-label","neo-label"],html:["Summary data did not arrive after 2s.</br>","Please double-check if the API is offline:</br></br>",'<a target="_blank" href="https://disease.sh/all">NovelCOVID/API all endpoint</a></br></br>',"and if so please try again later."].join(""),style:{margin:"20px"}}),e.vdom=t}onMainViewMounted(){const e=this;Neo.main.DomAccess.addScript({async:!0,defer:!0,src:"https://buttons.github.io/buttons.js"}),e.getReference("tab-container").on("moveTo",e.onTabMove,e)}onReloadDataButtonClick(e){this.loadData(),this.loadSummaryData()}onRemoveFooterButtonClick(e){const t=this,a=t.getReference("tab-container").getActiveCard();t.component.remove(t.getReference("footer"),!0),"covid-mapboxgl-container"===a.ntype&&t.getReference("mapboxglmap").autoResize()}onSwitchThemeButtonClick(e){let t,a,n,o,r,i,s=this,l=e.component,d=s.component,m=s.getReference("logo"),u=s.getReference("mapboxglmap"),p=m.vdom;"Theme Light"===l.text?(t="Theme Dark",n="../dist/development/neo-theme-light-no-css-vars.css",o="fa fa-moon",r=u.mapboxStyleLight,i="neo-theme-light"):(t="Theme Light",n="../dist/development/neo-theme-dark-no-css-vars.css",o="fa fa-sun",r=u.mapboxStyleDark,i="neo-theme-dark"),p.src="https://raw.githubusercontent.com/neomjs/pages/master/resources/images/apps/covid/"+("neo-theme-dark"===i?"covid_logo_dark.jpg":"covid_logo_light.jpg"),m.vdom=p,Neo.config.useCssVars?(a=[...d.cls],d.cls.forEach((e=>{e.includes("neo-theme")&&c.Z.remove(a,e)})),c.Z.add(a,i),d.cls=a,l.set({iconCls:o,text:t})):Neo.main.addon.Stylesheet.swapStyleSheet({href:n,id:"neo-theme"}).then((e=>{l.text=t})),u.mapboxStyle=r}onTabMove(e){c.Z.move(this.mainTabs,e.fromIndex,e.toIndex),c.Z.move(this.mainTabsListeners,e.fromIndex,e.toIndex)}static selectMapboxGlCountry(e,t){console.log(t.countryInfo.iso2);const a={FRA:["match",["get","NAME"],["France"],!0,!1],NOR:["match",["get","NAME"],["Norway"],!0,!1],default:["match",["get","ISO_A3"],[t.countryInfo.iso3],!0,!1]};e.setFilter({layerId:"ne-10m-admin-0-countries-4s7rvf",value:a[t.countryInfo.iso3]||a.default}),e.flyTo({lat:t.countryInfo.lat,lng:t.countryInfo.long}),e.zoom=5}updateCountryField(e){Neo.Main.editRoute({country:e.record.country})}}Neo.applyClassConfig(m);var u=a(2138),p=a(3429);class g extends p.Z{static getConfig(){return{className:"Covid.view.MainContainer",autoMount:!0,cls:["covid-viewport","neo-viewport"],controller:m,items:[s,{module:u.Z,activeIndex:null,flex:1,reference:"tab-container",sortable:!0,style:{margin:"10px",marginTop:0},items:[{module:()=>Promise.all([a.e(6593),a.e(4673)]).then(a.bind(a,4673)),reference:"table-container",tabButtonConfig:{iconCls:"fa fa-table",route:"mainview=table",text:"Table"}},{module:()=>a.e(2366).then(a.bind(a,2366)),tabButtonConfig:{iconCls:"fa fa-globe-americas",route:"mainview=mapboxglmap",text:"Mapbox GL Map"}},{module:()=>a.e(5585).then(a.bind(a,5585)),tabButtonConfig:{iconCls:"fa fa-globe-americas",route:"mainview=worldmap",text:"World Map"}},{module:()=>Promise.all([a.e(1721),a.e(5770)]).then(a.bind(a,5770)),tabButtonConfig:{iconCls:"fa fa-images",route:"mainview=gallery",text:"Gallery"}},{module:()=>Promise.all([a.e(6805),a.e(58)]).then(a.bind(a,58)),tabButtonConfig:{iconCls:"fa fa-dna",route:"mainview=helix",text:"Helix"}},{module:()=>a.e(326).then(a.bind(a,326)),reference:"attribution",tabButtonConfig:{iconCls:"fa fa-copyright",route:"mainview=attribution",text:"Attribution"}}]},o],layout:{ntype:"vbox",align:"stretch"}}}}Neo.applyClassConfig(g);const h=()=>Neo.app({mainView:g,name:"Covid"})},5666:(e,t,a)=>{"use strict";a.d(t,{Z:()=>i});var n=a(231);class o extends n.Z{static getConfig(){return{className:"Covid.model.Country",fields:[{name:"active",type:"Integer"},{name:"cases",type:"Integer"},{name:"casesPerOneMillion",type:"Integer"},{name:"country",type:"String"},{name:"countryInfo",type:"Object"},{name:"critical",type:"Integer"},{name:"deaths",type:"Integer"},{name:"index",type:"Integer"},{name:"infected",type:"Integer"},{name:"recovered",type:"Integer"},{name:"tests",type:"Integer"},{name:"testsPerOneMillion",type:"Integer"},{name:"todayCases",type:"Integer"},{name:"todayDeaths",type:"Integer"}]}}}Neo.applyClassConfig(o);var r=a(7816);class i extends r.Z{static getConfig(){return{className:"Covid.store.Countries",keyProperty:"country",model:o,sorters:[{property:"active",direction:"DESC"}]}}}Neo.applyClassConfig(i)},3429:(e,t,a)=>{"use strict";a.d(t,{Z:()=>o});var n=a(2680);class o extends n.Z{static getConfig(){return{className:"Neo.container.Viewport",ntype:"viewport",applyBodyCls:!0,cls:["neo-viewport"]}}onConstructed(){super.onConstructed(),this.applyBodyCls&&Neo.main.DomAccess.applyBodyCls({appName:this.appName,cls:["neo-body-viewport"]})}}Neo.applyClassConfig(o)},5354:(e,t,a)=>{"use strict";a.d(t,{Z:()=>i});var n=a(2641),o=(a(9342),a(1954)),r=a(3949);class i extends n.Z{static getConfig(){return{className:"Neo.controller.Component",ntype:"component-controller",component:null,parent_:null,references:null}}constructor(e){super(e);let t=this;t.references={},t.component.isConstructed?t.onComponentConstructed():t.component.on("constructed",(()=>{t.onComponentConstructed()}))}beforeSetParent(e,t){return e||this.getParent()}getHandlerScope(e){let t=this,a=t.parent;return Neo.isFunction(t[e])?t:a?a.getHandlerScope(e):null}getModel(e=!1){let t=this.component;return e?t.model:t.getModel()}getParent(){let e,t,a=this;return a.parent?a.parent:(t=a.component.parentId,e=t&&Neo.getComponent(t),e&&e.getController()||null)}getReference(e){let t=this,a=t.references[e];return a||(a=t.component.down({reference:e}),a&&(t.references[e]=a)),a||null}onComponentConstructed(){}parseConfig(e=this.component){let t,a,n,i=this,s=e.domListeners,l=e.listeners,c=e.reference;s&&s.forEach((s=>{Object.entries(s).forEach((([l,c])=>{t=null,"scope"!==l&&"delegate"!==l&&(Neo.isString(c)?t=c:Neo.isObject(c)&&c.hasOwnProperty("fn")&&Neo.isString(c.fn)&&(t=c.fn),t&&(n=i.getHandlerScope(t),n?(a=n[t].bind(n),s[l]=a,o.Z.updateListenerPlaceholder({componentId:e.id,eventHandlerMethod:a,eventHandlerName:t,eventName:l,scope:void 0})):r.Z.logError("Unknown domEvent handler for",t,e)))}))})),l&&Object.entries(l).forEach((([a,o])=>{"scope"!==a&&"delegate"!==a&&o.forEach((a=>{Neo.isObject(a)&&a.hasOwnProperty("fn")&&Neo.isString(a.fn)&&(t=a.fn,n=i.getHandlerScope(t),n?a.fn=n[t].bind(n):r.Z.logError("Unknown event handler for",t,e))}))})),c&&(i.references[c]=e)}removeReference(e){let t,a=this.references;for(t in a)if(e===a[t]){delete a[t];break}}}Neo.applyClassConfig(i)}}]);