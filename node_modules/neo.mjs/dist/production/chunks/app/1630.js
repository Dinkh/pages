(self.webpackChunkneo_mjs=self.webpackChunkneo_mjs||[]).push([[1630],{1630:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>x});var i=a(7875),l=a(2680),r=a(6593),o=a(231);class n extends o.Z{static getConfig(){return{className:"SharedCovid.model.HistoricalData",fields:[{name:"active",type:"int"},{name:"cases",type:"int"},{name:"date",type:"string"},{name:"dailyActive",type:"int"},{name:"dailyCases",type:"int"},{name:"dailyDeaths",type:"int"},{name:"dailyRecovered",type:"int"},{name:"deaths",type:"int"},{name:"recovered",type:"int"}]}}}Neo.applyClassConfig(n);var s=a(7816);class c extends s.Z{static getConfig(){return{className:"SharedCovid.store.HistoricalData",keyProperty:"date",model:n,sorters:[{property:"date",direction:"DESC"}]}}}Neo.applyClassConfig(c);var d=a(8102);class h extends r.Z{static getConfig(){return{className:"SharedCovid.view.country.HistoricalDataTable",cls:["covid-historical-data-table","neo-table-container"],columnDefaults:{align:"right",defaultSortDirection:"DESC",renderer:d.Z.formatNumber},columns:[{align:"left",dataField:"date",dock:"left",text:"Date",width:100,renderer:function(e){return{cls:["neo-date-column","neo-table-cell"],html:new Intl.DateTimeFormat("default",{day:"numeric",month:"numeric",year:"numeric"}).format(new Date(e.value))}}},{dataField:"cases",text:"Cases",renderer:e=>d.Z.formatNumber(e)},{dataField:"active",text:"Active",renderer:e=>d.Z.formatNumber(e,"#64B5F6")},{dataField:"recovered",text:"Recovered",renderer:e=>d.Z.formatNumber(e,"#28ca68")},{dataField:"deaths",text:"Deaths",renderer:e=>d.Z.formatNumber(e,"#fb6767")},{dataField:"dailyCases",text:"Daily C",renderer:e=>d.Z.formatNumber(e)},{dataField:"dailyActive",text:"Daily A",renderer:e=>d.Z.formatNumber(e,"#64B5F6")},{dataField:"dailyRecovered",text:"Daily R",renderer:e=>d.Z.formatNumber(e,"#28ca68")},{dataField:"dailyDeaths",text:"Daily D",renderer:e=>d.Z.formatNumber(e,"#fb6767")}],store:c}}}Neo.applyClassConfig(h);var u=a(8636);class m extends u.Z{static getConfig(){return{className:"SharedCovid.view.country.LineChartComponent",cls:["covid-line-chart"],chartConfig:{cursor:{maxTooltipDistance:-1},legend:{labels:{template:{fill:"#bbb"}}},xAxes:[{type:"DateAxis",renderer:{minGridDistance:60,labels:{template:{fill:"#bbb"}}}}],yAxes:[{type:"ValueAxis",logarithmic:!0,numberFormatter:{numberFormat:"#.0a",bigNumberPrefixes:[{number:1e3,suffix:"K"},{number:1e6,suffix:"M"},{number:1e9,suffix:"B"}]},renderer:{minGridDistance:60,labels:{template:{fill:"#bbb"}}}}],series:[{type:"LineSeries",dataFields:{dateX:"date",valueY:"active"},fill:"#64b5f6",name:"Active",stroke:"#64b5f6",strokeWidth:3,tooltip:{background:{fill:"#fff"},getFillFromObject:!1,label:{fill:"#000"}}},{type:"LineSeries",dataFields:{dateX:"date",valueY:"cases"},fill:"#bbb",name:"Cases",stroke:"#bbb",strokeWidth:3,tooltip:{background:{fill:"#fff"},getFillFromObject:!1,label:{fill:"#000"}}},{type:"LineSeries",dataFields:{dateX:"date",valueY:"deaths"},fill:"#fb6767",name:"Deaths",stroke:"#fb6767",strokeWidth:3,tooltip:{background:{fill:"#fff"},getFillFromObject:!1,label:{fill:"#000"}}},{type:"LineSeries",dataFields:{dateX:"date",valueY:"recovered"},fill:"#28ca68",name:"Recovered",stroke:"#28ca68",strokeWidth:3,tooltip:{background:{fill:"#fff"},getFillFromObject:!1,label:{fill:"#000"}}}]},combineSeriesTooltip:!0,fitParentHeight:!0}}}Neo.applyClassConfig(m);var f=a(3415),p=a(2138),b=a(9341);class g extends r.Z{static getConfig(){return{className:"SharedCovid.view.country.Table",cls:["covid-country-table","neo-table-container"],columnDefaults:{align:"right",defaultSortDirection:"DESC",renderer:d.Z.formatNumber},columns:[{cls:["neo-index-column","neo-table-header-button"],dataField:"index",dock:"left",minWidth:40,text:"#",renderer:d.Z.indexRenderer,width:40},{align:"left",dataField:"country",defaultSortDirection:"ASC",dock:"left",text:"Country",width:200,renderer:function(e){return{cls:["neo-country-column","neo-table-cell"],html:['<div style="display: flex; align-items: center">','<img style="height:20px; margin-right:10px; width:20px;" src="'+d.Z.getCountryFlagUrl(e.value)+'">'+e.value,"</div>"].join("")}}},{dataField:"cases",text:"Cases"},{dataField:"casesPerOneMillion",text:"Cases / 1M"},{dataField:"infected",text:"Infected",renderer:e=>d.Z.formatInfected(e)},{dataField:"active",text:"Active",renderer:e=>d.Z.formatNumber(e,"#64B5F6")},{dataField:"recovered",text:"Recovered",renderer:e=>d.Z.formatNumber(e,"#28ca68")},{dataField:"critical",text:"Critical",renderer:e=>d.Z.formatNumber(e,"orange")},{dataField:"deaths",text:"Deaths",renderer:e=>d.Z.formatNumber(e,"#fb6767")},{dataField:"todayCases",text:"Cases today"},{dataField:"todayDeaths",text:"Deaths today",renderer:e=>d.Z.formatNumber(e,"#fb6767")},{dataField:"tests",text:"Tests"},{dataField:"testsPerOneMillion",text:"Tests / 1M"}],store:b.Z}}}Neo.applyClassConfig(g);var v=a(5354),y=a(3501);class C extends v.Z{static getConfig(){return{className:"SharedCovid.view.TableContainerController",apiBaseUrl:"https://disease.sh/",apiHistoricalDataEndpoint:"v3/covid-19/historical/",apiHistoricalDataTimeRange:"all",removeEmptyRecords:!0,selectedRecord:null,table_:null}}onConstructed(){super.onConstructed();const e=this;e.component.on("countrySelect",e.onTableSelect,e)}addStoreItems(e){let t,a=this,i=[],l={},r=e?.timeline;e&&!e.timeline&&(r=e),r&&(Object.entries(r.cases||{}).forEach((([e,t])=>{l[e]={date:new Date(e).toISOString(),cases:t}})),Object.entries(r.deaths||{}).forEach((([e,t])=>{l.hasOwnProperty(e)?l[e].deaths=t:l[e]={date:new Date(e).toISOString(),deaths:t}})),Object.entries(r.recovered||{}).forEach((([e,t])=>{l.hasOwnProperty(e)?l[e].recovered=t:l[e]={date:new Date(e).toISOString(),recovered:t}})),Object.entries(l).forEach((([e,t])=>{t.active=t.cases-t.deaths-t.recovered,i.push(t)})),a.removeEmptyRecords&&[...i].forEach((e=>{0===e.cases&&y.Z.remove(i,e)})),Object.assign(i[0],{dailyActive:i[0].active,dailyCases:i[0].cases,dailyDeaths:i[0].deaths,dailyRecovered:i[0].recovered}),i.forEach(((e,a)=>{t=i[a+1],t&&Object.assign(t,{dailyActive:t.active-e.active,dailyCases:t.cases-e.cases,dailyDeaths:t.deaths-e.deaths,dailyRecovered:t.recovered-e.recovered})})),a.getReference("historical-data-table").store.data=i,a.updateLineChart(i))}static assignFieldsOrNull(e){return{active:e.active||null,cases:e.cases||null,deaths:e.deaths||null,dailyActive:e.dailyActive||null,dailyCases:e.dailyCases||null,dailyDeaths:e.dailyDeaths||null,dailyRecovered:e.dailyRecovered||null,recovered:e.recovered||null}}beforeGetTable(e){return e||(this._table=e=this.getReference("table")),e}loadHistoricalData(e){const t=this,a=t.apiBaseUrl+t.apiHistoricalDataEndpoint+e+"?lastdays="+t.apiHistoricalDataTimeRange;fetch(a).then((e=>e.json())).catch((e=>console.log("Canâ€™t access "+a,e))).then((e=>t.addStoreItems(e)))}on520pxButtonClick(e){this.getReference("controls-panel").width=520}on800pxButtonClick(e){this.getReference("controls-panel").width=800}onCollapseButtonClick(e){const t=this.getReference("controls-panel"),a=40===t.width;t.width=a?this.component.historyPanelWidth:40,e.component.text=a?"X":"+"}onDailyValuesChange(e){const t=this.getReference("line-chart").id,a=this.getReference("logarithmic-scale-checkbox"),i=e.value;i?a.set({checked:!1,disabled:e.value}):a.disabled=!1,Neo.main.addon.AmCharts.setProperties({appName:a.appName,id:t,properties:{"series.values.0.dataFields.valueY":i?"dailyActive":"active","series.values.1.dataFields.valueY":i?"dailyCases":"cases","series.values.2.dataFields.valueY":i?"dailyDeaths":"deaths","series.values.3.dataFields.valueY":i?"dailyRecovered":"recovered"}}),Neo.main.addon.AmCharts.callMethod({appName:a.appName,id:t,path:"invalidateData"})}onLogarithmicScaleChange(e){const t=this.getReference("line-chart");Neo.main.addon.AmCharts.setProperty({appName:t.appName,id:t.id,path:"yAxes.values.0.logarithmic",value:e.value})}onTableSelect(e){const t=this,a=e.record;e.record?t.selectedRecord={...a}:t.selectedRecord=null,t.loadHistoricalData(a?.countryInfo?.iso2||"all"),t.getReference("historical-data-label").html="Historical Data ("+(a?.country||"World")+")"}storeReferences(){this.getReference("line-chart"),this.getReference("logarithmic-scale-checkbox")}updateLineChart(e){let t=this,a=t.selectedRecord,i=t.getReference("line-chart");e.forEach((e=>Object.assign(e,C.assignFieldsOrNull(e)))),a||(a=t.getParent().summaryData),a&&e.push({date:(new Date).toISOString(),...C.assignFieldsOrNull(a)}),i.chartData=e}}Neo.applyClassConfig(C);class x extends l.Z{static getConfig(){return{className:"SharedCovid.view.TableContainer",autoMount:!0,controller:C,historyPanelWidth:520,table:null,tableConfig:null,layout:{ntype:"hbox",align:"stretch"},items:[{ntype:"container",flex:1,layout:"fit",items:[]},{module:f.Z,cls:["neo-configuration-panel","neo-panel","neo-container"],layout:{ntype:"vbox",align:"stretch"},reference:"controls-panel",style:{backgroundColor:"#2b2b2b"},width:"@config:historyPanelWidth",containerConfig:{flex:null,style:{overflowY:"scroll"}},headers:[{dock:"top",reference:"controls-panel-header",items:[{ntype:"button",handler:"onCollapseButtonClick",text:"X"},{ntype:"label",reference:"historical-data-label",text:"Historical Data"},"->",{ntype:"button",handler:"on520pxButtonClick",height:24,text:"520px"},{ntype:"button",handler:"on800pxButtonClick",height:24,text:"800px"},{ntype:"button",handler:"onWindowChartMaximizeButtonClick",iconCls:"far fa-window-maximize"}]}],items:[{module:p.Z,style:{marginTop:"10px"},items:[{ntype:"container",layout:{ntype:"vbox",align:"stretch"},items:[{ntype:"toolbar",flex:"0 1 auto",items:[{module:i.Z,checked:!0,labelText:"Logarithmic Scale",labelWidth:135,reference:"logarithmic-scale-checkbox",listeners:{change:"onLogarithmicScaleChange"}},{module:i.Z,labelText:"Daily Values",style:{marginLeft:"30px"},labelWidth:95,listeners:{change:"onDailyValuesChange"}}]},{module:m,flex:1,reference:"line-chart"}],tabButtonConfig:{iconCls:"fa fa-chart-line",text:"Chart"}}]}]}]}}constructor(e){super(e);const t=this;t.historicalDataTable=Neo.create({module:h,reference:"historical-data-table",tabButtonConfig:{iconCls:"fa fa-table",text:"Table"},...t.historicalDataTableConfig}),t.items[1].items[0].items.push(t.historicalDataTable),t.table=Neo.create({module:g,reference:"table",...t.tableConfig}),t.items[0].items.push(t.table)}storeReferences(){this.controller.storeReferences()}}Neo.applyClassConfig(x)},8636:(e,t,a)=>{"use strict";a.d(t,{Z:()=>r});var i=a(3452),l=a(3949);class r extends i.Z{static getConfig(){return{className:"Neo.component.wrapper.AmChart",ntype:"am-chart",chartConfig:null,chartType:"XYChart",combineSeriesTooltip:!1,chartData_:null,dataPath:"",package:"am4charts",_vdom:{style:{position:"relative",height:"100%",width:"100%"},cn:[{style:{position:"absolute",height:"100%",width:"100%"},cn:[{style:{color:"red",height:"100%"}}]}]}}}afterSetChartData(e,t){let a=this;e&&Neo.main.addon.AmCharts.updateData({appName:a.appName,data:e,dataPath:a.dataPath,id:a.id})}afterSetMounted(e,t){let a=this;if(!1===e&&void 0!==t&&Neo.main.addon.AmCharts.destroy({appName:a.appName,id:a.id}),super.afterSetMounted(e,t),e){const e={appName:a.appName,combineSeriesTooltip:a.combineSeriesTooltip,config:a.chartConfig,id:a.id,package:a.package,type:a.chartType};a.chartData&&(e.data=a.chartData,e.dataPath=a.dataPath),setTimeout((()=>{Neo.main.addon.AmCharts.create(e).then(a.onChartMounted)}),50)}}getVdomRoot(){return this.vdom.cn[0].cn[0]}getVnodeRoot(){return this.vnode.childNodes[0].childNodes[0]}onChartMounted(){}onConstructed(){super.onConstructed();const e=this;e.chartConfig||l.Z.logError("wrapper.AmChart defined without a chartConfig",e.id),e.parseChartConfig(e.chartConfig)}parseChartConfig(e){const t=this;Neo.isArray(e)?e.forEach((e=>{t.parseChartConfig(e)})):Object.entries(e).forEach((([a,i])=>{Neo.isArray(i)||Neo.isObject(i)?t.parseChartConfig(i):Neo.isString(i)&&i.startsWith("@config:")&&(i=i.substr(8),t[i]?e[a]=t[i]:l.Z.logError("The used @config does not exist:",i,t))}))}}Neo.applyClassConfig(r)},3415:(e,t,a)=>{"use strict";a.d(t,{Z:()=>l});var i=a(2680);a(4959);class l extends i.Z{static getConfig(){return{className:"Neo.container.Panel",ntype:"panel",cls:["neo-panel","neo-container"],containerConfig:null,headerDefaults:null,headers:null,_layout:{ntype:"vbox",align:"stretch"},verticalHeadersFirst:!1}}constructor(e){super(e),!0!==e?.verticalHeadersFirst&&!0!==this.verticalHeadersFirst||(this.layout={ntype:"hbox",align:"stretch"})}static createHeaderConfig(e){let t={ntype:"toolbar",cls:["neo-panel-header-toolbar","neo-toolbar"],flex:"0 1 auto"};return e.text&&(t.items=[{ntype:"label",cls:["neo-panel-header-text","neo-label"],text:e.text}],delete e.text),Neo.isArray(e.items)&&e.items.forEach((e=>{"label"===e.ntype&&(e.cls=["neo-panel-header-text","neo-label"])})),{...t,...e}}createItems(){let e,t=this,a=!1===t.verticalHeadersFirst,i=t.headers||[],r=i.filter((e=>e.dock===(a?"bottom":"right"))),o=i.filter((e=>e.dock===(a?"left":"top"))),n=i.filter((e=>e.dock===(a?"right":"bottom"))),s=i.filter((e=>e.dock===(a?"top":"left"))),c=r.length>0||s.length>0,d=o.length>0||n.length>0,h=t.items,u=[],m=[];i.length<1&&Neo.error("Panel without headers, please use a Container instead",t.id),s.forEach((e=>{m.push(l.createHeaderConfig(e))})),d&&(a&&c||!a&&c)?(o.forEach((e=>{u.push(l.createHeaderConfig(e))})),e={ntype:"container",flex:1,items:h,itemDefaults:t.itemDefaults,...t.containerConfig},u.push({...t.headerDefaults,...e}),n.forEach((e=>{u.push(l.createHeaderConfig(e))})),m.push({ntype:"container",items:u,layout:{ntype:a?"hbox":"vbox",align:"stretch"}})):(e={ntype:"container",flex:1,items:h,itemDefaults:t.itemDefaults,...t.containerConfig},m.push({...t.headerDefaults,...e})),r.forEach((e=>{m.push(l.createHeaderConfig(e))})),t.items=m,t.itemDefaults=null,super.createItems()}}Neo.applyClassConfig(l)},7875:(e,t,a)=>{"use strict";a.d(t,{Z:()=>l});var i=a(2232);class l extends i.Z{static getConfig(){return{className:"Neo.form.field.CheckBox",ntype:"checkboxfield",checked_:!1,cls:["neo-checkboxfield"],enableLabelClicks_:!0,hideLabel_:!1,hideValueLabel_:!0,inputType_:"checkbox",labelText_:"LabelText",labelWidth_:150,name_:"",valueLabelText_:"ValueLabel",_vdom:{cn:[{tag:"label",cls:["neo-checkbox-label"]},{tag:"input",cls:["neo-checkbox-input"]},{tag:"label",cls:["neo-checkbox-value-label"]}]}}}constructor(e){super(e);let t=this,a=t.domListeners,i=t.vdom;i.cn[1].id=t.getInputElId(),t.vdom=i,a.push({change:t.onInputValueChange,scope:t}),t.domListeners=a}afterSetChecked(e,t){let a=this,i=a.vdom;i.cn[1].checked=e,a.vdom=i,void 0!==t&&a.fire("change",{component:a,oldValue:t,value:e})}afterSetEnableLabelClicks(e,t){let a=this,i=a.vdom,l=i.cn[2];e?l.for=a.getInputElId():delete l.for,a.vdom=i}afterSetHideLabel(e,t){let a=this.vdom;a.cn[0].removeDom=e,this.vdom=a}afterSetHideValueLabel(e,t){let a=this.vdom;a.cn[2].removeDom=e,this.vdom=a}afterSetInputType(e,t){let a=this.vdom;a.cn[1].type=e,this.vdom=a}afterSetLabelText(e,t){let a=this.vdom;a.cn[0].innerHTML=e,this.vdom=a}afterSetLabelWidth(e,t){let a=this,i=a.vdom;a.hideLabel||(i.cn[0].width=e,a.vdom=i)}afterSetName(e,t){let a=this.vdom;a.cn[1].name=e,this.vdom=a}afterSetValue(e,t){if(e){let t=this.vdom;t.cn[1].value=e,this.vdom=t}super.afterSetValue(e,t)}afterSetValueLabelText(e,t){let a=this,i=a.vdom;a.hideValueLabel||(i.cn[2].innerHTML=e,a.vdom=i)}getInputElId(){return`${this.id}-input`}onInputValueChange(e){let t=this,a=e.target.checked;t._checked=a,t.vdom.cn[1].checked=a,t.vnode.childNodes[t.hideLabel?0:1].attributes.checked=`${a}`,t.fire("change",{component:t,oldValue:!a,value:a})}}Neo.applyClassConfig(l)}}]);