self.webpackChunk([41],{91:function(e,o,r){"use strict";r.r(o),r.d(o,"default",(function(){return d}));var a=r(0),t=r(68);class n extends t.a{static getConfig(){return{className:"Neo.draggable.DragProxyComponent",ntype:"dragproxy",autoMount:!0,autoRender:!0,cls:["neo-dragproxy"],moveInMainThread:!0}}constructor(e){super(e);this.on("mounted",this.onMounted,this)}onMounted(e){this.moveInMainThread&&Neo.main.addon.DragDrop.setDragProxyElement({id:e})}}Neo.applyClassConfig(n);var l=r(3),s=r(8);class d extends a.a{static getConfig(){return{className:"Neo.draggable.DragZone",ntype:"dragzone",addDragProxyCls:!0,alwaysFireDragMove:!1,appName:null,boundaryContainerId:null,dragElement:null,dragElementRect:null,dragProxy:null,dragProxyConfig_:null,dragProxyCls:"neo-dragproxy",moveHorizontal:!0,moveInMainThread:!0,moveVertical:!0,offsetX:0,offsetY:0,owner:null,proxyParentId_:"document.body",scrollContainerId:null,scrollFactorLeft:1,scrollFactorTop:1,useProxyWrapper:!0}}constructor(e){if(super(e),!Neo.main.addon.DragDrop)throw new Error("You can not use Neo.draggable.DragZone without adding Neo.main.addon.DragDrop to the main thread addons")}beforeGetDragProxyConfig(e){return Neo.clone(e,!0,!0)}createDragProxy(e){let o=this,r=Neo.getComponent(o.getDragElementRoot().id)||o.owner,a=s.a.clone(o.dragElement);const t={module:n,appName:o.appName,moveInMainThread:o.moveInMainThread,parentId:o.proxyParentId,vdom:o.useProxyWrapper?{cn:[a]}:a,style:{height:e.height+"px",left:(o.moveHorizontal?e.left:0)+"px",top:(o.moveVertical?e.top:0)+"px",width:e.width+"px"},...o.dragProxyConfig||{}};t.cls=t.cls||[],r&&t.cls.push(r.getTheme()),o.useProxyWrapper||t.cls.push(...a.cls),o.addDragProxyCls&&t.cls&&l.a.add(t.cls,o.dragProxyCls),o.dragProxy=Neo.create(t)}destroyDragProxy(){let e=this.dragProxy.id;setTimeout(()=>{Neo.currentWorker.promiseMessage("main",{action:"updateDom",deltas:[{action:"removeNode",id:e}]})},this.moveInMainThread?0:30),this.dragProxy.destroy()}dragEnd(){let e=this,o=e.owner,r=o.cls;l.a.remove(r,"neo-is-dragging"),o.cls=r,e.dragProxy&&(e.destroyDragProxy(),e.dragProxy=null),Object.assign(e,{dragElementRect:null,offsetX:0,offsetY:0,scrollContainerId:null})}dragMove(e){let o,r=this;!r.moveInMainThread&&r.dragProxy&&(o=r.dragProxy.style,r.moveHorizontal&&(o.left=e.clientX-r.offsetX+"px"),r.moveVertical&&(o.top=e.clientY-r.offsetY+"px"),r.dragProxy.style=o)}dragStart(e){let o=this,r=o.owner,a=r.cls;l.a.add(a,"neo-is-dragging"),r.cls=a,Neo.main.addon.DragDrop.setConfigs(o.getMainThreadConfigs()),Neo.main.DomAccess.getBoundingClientRect({id:o.getDragElementRoot().id}).then(r=>{Object.assign(o,{dragElementRect:r,offsetX:e.clientX-r.left,offsetY:e.clientY-r.top}),o.createDragProxy(r)})}getDragElementRoot(){return this.dragElement}getMainThreadConfigs(){let e=this;return{alwaysFireDragMove:e.alwaysFireDragMove,boundaryContainerId:e.boundaryContainerId,dragProxyCls:e.dragProxyCls,scrollContainerId:e.scrollContainerId,scrollFactorLeft:e.scrollFactorLeft,scrollFactorTop:e.scrollFactorTop}}}Neo.applyClassConfig(d)}});