(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-src_menu_List_mjs"],{

/***/ "./src/menu/List.mjs":
/*!***************************!*\
  !*** ./src/menu/List.mjs ***!
  \***************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ List)
/* harmony export */ });
/* harmony import */ var _list_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../list/Base.mjs */ "./src/list/Base.mjs");
/* harmony import */ var _selection_menu_ListModel_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../selection/menu/ListModel.mjs */ "./src/selection/menu/ListModel.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");
/* harmony import */ var _Store_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Store.mjs */ "./src/menu/Store.mjs");





/**
 * @class Neo.menu.List
 * @extends Neo.list.Base
 */
class List extends _list_Base_mjs__WEBPACK_IMPORTED_MODULE_0__.default {
    static getConfig() {return {
        /**
         * @member {String} className='Neo.menu.List'
         * @protected
         */
        className: 'Neo.menu.List',
        /**
         * @member {String} ntype='menu-list'
         * @protected
         */
        ntype: 'menu-list',
        /**
         * Read only. We are storing the currently visible subMenu instance.
         * @member {Neo.menu.List|Neo.menu.Panel|null} activeSubMenu=null
         */
        activeSubMenu: null,
        /**
         * @member {String[]} cls=['neo-menu-list','neo-list']
         */
        cls: ['neo-menu-list', 'neo-list'],
        /**
         * True will add 'neo-floating' to the instance cls list.
         * @member {Boolean} floating_=false
         */
        floating_: false,
        /**
         * setTimeout() id after a focus-leave event.
         * @member {Number|null} focusTimeoutId=null
         * @protected
         */
        focusTimeoutId: null,
        /**
         * Optionally pass menu.Store data directly
         * @member {Object[]|null} items_=null
         */
        items_: null,
        /**
         * Internal flag.
         * Sub-menus will bubble of focus changes to the top level.
         * @member {Boolean} menuFocus_=false
         * @protected
         */
        menuFocus_: false,
        /**
         * Internal flag.
         * True for a top level menu, false for sub-menus.
         * @member {Boolean} isRoot=true
         * @protected
         */
        isRoot: true,
        /**
         * Storing the list item index of the parent menu in case it exists.
         * @member {Number} parentIndex=0
         * @protected
         */
        parentIndex: 0,
        /**
         * Storing a reference to the parent menu in case it exists.
         * @member {Neo.menu.List|Neo.menu.Panel|null} parentMenu=null
         * @protected
         */
        parentMenu: null,
        /**
         * Value for the list.Base selectionModel_ config
         * @member {Neo.selection.menu.ListModel} selectionModel=ListModel
         */
        selectionModel: _selection_menu_ListModel_mjs__WEBPACK_IMPORTED_MODULE_1__.default,
        /**
         * Value for the list.Base store_ config
         * @member {Neo.menu.Store} store=Store
         */
        store: _Store_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
        /**
         * The distance in px between a menu and a child menu
         * See: https://github.com/neomjs/neo/issues/2569
         * @member {Number} subMenuGap=0
         */
        subMenuGap: 0,
        /**
         * Storing childMenus by record keyProperty
         * @member {Object} subMenuMap=null
         * @protected
         */
        subMenuMap: null
    }}

    /**
     * Triggered after the floating config got changed
     * @param {Object[]} value
     * @param {Object[]} oldValue
     * @protected
     */
    afterSetFloating(value, oldValue) {
        let cls = this.cls;

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_2__.default[value ? 'add' : 'remove'](cls, 'neo-floating');
        this.cls = cls;
    }

    /**
     * Triggered after the items config got changed
     * @param {Object[]} value
     * @param {Object[]} oldValue
     * @protected
     */
    afterSetItems(value, oldValue) {
        let store = this.store;

        oldValue && store.remove(oldValue);
        value    && store.add(value);
    }

    /**
     * Triggered after the menuFocus config got changed
     * @param {Boolean} value
     * @param {Boolean} oldValue
     * @protected
     */
    afterSetMenuFocus(value, oldValue) {
        if (oldValue !== undefined) {
            let me = this;

            if (me.isRoot) {
                if (!value) {
                    me.focusTimeoutId = setTimeout(() => {
                        me[me.floating ? 'unmount' : 'hideSubMenu']();
                    }, 20);
                } else {
                    clearTimeout(me.focusTimeoutId);
                    me.focusTimeoutId = null;
                }
            } else {
                // bubble the focus change upwards
                me.parentMenu.menuFocus = value;
            }
        }
    }

    /**
     * Override this method for custom renderers
     * @param {Object} record
     * @param {Number} index
     * @returns {Object|Object[]|String} Either a config object to assign to the item, a vdom cn array or a html string
     */
    createItemContent(record, index) {
        let me     = this,
            id     = record[me.store.keyProperty],
            vdomCn = [{tag: 'span', cls: ['neo-content'], html: record[me.displayField]}];

        if (record.iconCls && record.iconCls !== '') {
            vdomCn.unshift({tag: 'i', cls: ['neo-menu-icon', 'neo-icon', record.iconCls], id: me.getIconId(id)});
        }

        if (me.hasChildren(record)) {
            vdomCn.push({tag: 'i', cls: ['neo-arrow-icon', 'neo-icon', 'fas fa-chevron-right'], id: me.getArrowIconId(id)});
        }

        return vdomCn;
    }

    /**
     *
     */
    destroy(...args) {
        let me            = this,
            activeSubMenu = me.activeSubMenu,
            subMenuMap    = me.subMenuMap;

        me.store.destroy();
        me.store = null;

        if (activeSubMenu) {
            activeSubMenu.unmount();
            me.activeSubMenu = null;
        }

        Object.entries(subMenuMap).forEach(([key, value]) => {
            value.destroy();
            subMenuMap[key] = null;
        });

        super.destroy(...args);
    }

    /**
     *
     * @param {Number|String} recordId
     * @returns {String}
     */
    getArrowIconId(recordId) {
        return `${this.id}__arrow_icon__${recordId}`;
    }

    /**
     *
     * @param {Number|String} recordId
     * @returns {String}
     */
    getIconId(recordId) {
        return `${this.id}__icon__${recordId}`;
    }

    /**
     * recordIds can be Numbers, so we do need a prefix
     * @param {Number|String} recordId
     * @returns {String}
     */
    getMenuMapId(recordId) {
        return `menu__${recordId}`;
    }

    /**
     * Checks if a record has items
     * @param {Object} record
     * @returns {Boolean}
     */
    hasChildren(record) {
        return Array.isArray(record.items) && record.items.length > 0;
    }

    /**
     *
     */
    hideSubMenu() {
        let me            = this,
            activeSubMenu = me.activeSubMenu;

        if (activeSubMenu) {
            activeSubMenu.unmount();
            me.activeSubMenu = null;
        }
    }

    /**
     *
     * @param {Object} data
     * @param {Object[]} data.path
     */
    onFocusEnter(data) {
        this.menuFocus = true;
    }

    /**
     *
     * @param {Object} data
     * @param {Object[]} data.oldPath
     */
    onFocusLeave(data) {
        this.menuFocus = false;
    }

    /**
     *
     * @param {String[]} items
     */
    onSelect(items) {
        let me       = this,
            nodeId   = items[0],
            recordId = me.getItemRecordId(nodeId),
            record   = me.store.get(recordId);

        if (me.activeSubMenu !== me.subMenuMap?.[me.getMenuMapId(recordId)]) {
            me.hideSubMenu();

            if (me.hasChildren(record)) {
                me.showSubMenu(nodeId, record);
            }
        }
    }

    /**
     *
     * @param {String} nodeId
     * @param {Object} record
     */
    showSubMenu(nodeId, record) {
        let me           = this,
            store        = me.store,
            recordId     = record[store.keyProperty],
            subMenuMap   = me.subMenuMap || {},
            subMenuMapId = me.getMenuMapId(recordId),
            subMenu      = subMenuMap[subMenuMapId],
            menuStyle, style;

        Neo.main.DomAccess.getBoundingClientRect({
            appName: me.appName,
            id     : nodeId
        }).then(rect => {
            style = {
                left: `${rect.right + me.subMenuGap}px`,
                top : `${rect.top - 1}px` // minus the border
            };

            if (subMenu) {
                menuStyle = subMenu.style;

                Object.assign(menuStyle, style);

                subMenu.setSilent({style: menuStyle});
            } else {
                subMenuMap[subMenuMapId] = subMenu = Neo.create({
                    module     : List,
                    appName    : me.appName,
                    floating   : true,
                    items      : record.items,
                    isRoot     : false,
                    parentId   : Neo.apps[me.appName].mainView.id,
                    parentIndex: store.indexOf(record),
                    parentMenu : me,
                    style      : style
                });
            }

            me.activeSubMenu = subMenu;
            me.subMenuMap    = subMenuMap;

            subMenu.render(true);
        });
    }

    /**
     *
     */
    unmount() {
        this.selectionModel.deselectAll(true); // silent update
        this.hideSubMenu();

        super.unmount();
    }
}

Neo.applyClassConfig(List);




/***/ }),

/***/ "./src/menu/Model.mjs":
/*!****************************!*\
  !*** ./src/menu/Model.mjs ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Model)
/* harmony export */ });
/* harmony import */ var _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/data/Model.mjs */ "./src/data/Model.mjs");


/**
 * @class Neo.menu.Model
 * @extends Neo.data.Model
 */
class Model extends _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__.default {
    static getConfig() {return {
        /**
         * @member {String} className='Neo.menu.Model'
         * @protected
         */
        className: 'Neo.menu.Model',
        /**
         * @member {String} keyProperty='id'
         */
        keyProperty: 'id',
        /**
         * @member {Object[]} fields
         */
        fields: [{
            name: 'iconCls',
            type: 'String'
        }, {
            name: 'id',
            type: 'Integer'
        }, {
            name: 'items', // optional
            type: 'Array'
        }, {
            name: 'name',
            type: 'String'
        }]
    }}
}

Neo.applyClassConfig(Model);




/***/ }),

/***/ "./src/menu/Store.mjs":
/*!****************************!*\
  !*** ./src/menu/Store.mjs ***!
  \****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Store)
/* harmony export */ });
/* harmony import */ var _Model_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Model.mjs */ "./src/menu/Model.mjs");
/* harmony import */ var _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/data/Store.mjs */ "./src/data/Store.mjs");



/**
 * @class Neo.menu.Store
 * @extends Neo.data.Store
 */
class Store extends _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_1__.default {
    static getConfig() {return {
        /**
         * @member {String} className='Neo.menu.Store'
         * @protected
         */
        className: 'Neo.menu.Store',
        /**
         * @member {Neo.menu.Model} model=Model
         */
        model: _Model_mjs__WEBPACK_IMPORTED_MODULE_0__.default
    }}
}

Neo.applyClassConfig(Store);




/***/ }),

/***/ "./src/selection/menu/ListModel.mjs":
/*!******************************************!*\
  !*** ./src/selection/menu/ListModel.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ListModel)
/* harmony export */ });
/* harmony import */ var _ListModel_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ListModel.mjs */ "./src/selection/ListModel.mjs");


/**
 * @class Neo.selection.menu.ListModel
 * @extends Neo.selection.ListModel
 */
class ListModel extends _ListModel_mjs__WEBPACK_IMPORTED_MODULE_0__.default {
    static getConfig() {return {
        /**
         * @member {String} className='Neo.selection.menu.ListModel'
         * @protected
         */
        className: 'Neo.selection.menu.ListModel',
        /**
         * @member {String} ntype='selection-menu-listmodel'
         * @protected
         */
        ntype: 'selection-menu-listmodel'
    }}

    /**
     *
     * @param {Object} data
     */
    onKeyDownLeft(data) {
        let view       = this.view,
            parentMenu = view.parentMenu;

        if (parentMenu) {
            view.selectionModel.deselectAll();
            parentMenu.selectionModel.selectAt(view.parentIndex);
        }
    }

    /**
     *
     * @param {Object} data
     */
    onKeyDownRight(data) {
        let activeSubMenu = this.view.activeSubMenu;

        if (activeSubMenu) {
            activeSubMenu.selectionModel.selectAt(0);
        }
    }
}

Neo.applyClassConfig(ListModel);




/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,