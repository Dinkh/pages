"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["apps_website_view_examples_List_mjs"],{

/***/ "./apps/website/model/Example.mjs":
/*!****************************************!*\
  !*** ./apps/website/model/Example.mjs ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/data/Model.mjs */ "./src/data/Model.mjs");


/**
 * @class Website.model.Example
 * @extends Neo.data.Model
 */
class Example extends _src_data_Model_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static getConfig() {return {
        /**
         * @member {String} className='Website.model.Example'
         * @protected
         */
        className: 'BlogPost.model.Example',
        /**
         * @member {Object[]} fields
         * @protected
         */
        fields: [{
            name: 'backgroundColor',
            type: 'String'
        }, {
            name: 'browsers',
            type: 'Array'
        }, {
            name: 'environments',
            type: 'Array'
        }, {
            name: 'id',
            type: 'Integer'
        }, {
            name: 'image',
            type: 'String'
        }, {
            name: 'name',
            type: 'String'
        }, {
            name: 'sourceUrl',
            type: 'String'
        }, {
            name: 'url',
            type: 'String'
        }]
    }}
}

Neo.applyClassConfig(Example);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Example);


/***/ }),

/***/ "./apps/website/store/Examples.mjs":
/*!*****************************************!*\
  !*** ./apps/website/store/Examples.mjs ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _model_Example_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../model/Example.mjs */ "./apps/website/model/Example.mjs");
/* harmony import */ var _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/data/Store.mjs */ "./src/data/Store.mjs");



/**
 * @class Website.store.Examples
 * @extends Neo.data.Store
 */
class Examples extends _src_data_Store_mjs__WEBPACK_IMPORTED_MODULE_1__["default"] {
    static getConfig() {return {
        /**
         * @member {String} className='Website.store.Examples'
         * @protected
         */
        className: 'Website.store.Examples',
        /**
         * @member {String} keyProperty='id'
         */
        keyProperty: 'id',
        /**
         * @member {Neo.data.Model} model=Example
         */
        model: _model_Example_mjs__WEBPACK_IMPORTED_MODULE_0__["default"],
        /**
         * @member {Object[]} sorters=[{property: 'id', direction: 'ASC'}]
         */
        sorters: [{
            property : 'id',
            direction: 'DESC'
        }]
    }}
}

Neo.applyClassConfig(Examples);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Examples);


/***/ }),

/***/ "./apps/website/view/examples/List.mjs":
/*!*********************************************!*\
  !*** ./apps/website/view/examples/List.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _src_list_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../src/list/Base.mjs */ "./src/list/Base.mjs");
/* harmony import */ var _store_Examples_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../store/Examples.mjs */ "./apps/website/store/Examples.mjs");



/**
 * @class Website.view.examples.List
 * @extends Neo.list.Base
 */
class List extends _src_list_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static getStaticConfig() {return {
        /**
         * A regex to enforce a maxLength (word break)
         * @member {RegExp} nameRegEx
         * @protected
         * @static
         */
        nameRegEx: /^(.{65}[^\s]*).*/
    }}

    static getConfig() {return {
        /**
         * @member {String} className='Website.view.examples.List'
         * @protected
         */
        className: 'Website.view.examples.List',
        /**
         * @member {String[]} baseCls=['website-examples-list','neo-list']
         */
        baseCls: ['website-examples-list', 'neo-list'],
        /**
         * @member {Neo.data.Store} store=Examples
         */
        store: _store_Examples_mjs__WEBPACK_IMPORTED_MODULE_1__["default"],
        /**
         * @member {String|null} storeUrl_=null
         */
        storeUrl_: null,
        /**
         * @member {Boolean} useWrapperNode=true
         */
        useWrapperNode: true,
        /**
         * @member {Object} _vdom
         */
        _vdom:
        {cn: [
            {tag: 'ul', cn: []}
        ]}
    }}

    /**
     * Triggered before the store config gets changed.
     * @param {Object|Neo.data.Store} value
     * @param {Object|Neo.data.Store} oldValue
     * @returns {Neo.data.Store}
     * @protected
     */
    beforeSetStore(value, oldValue) {
        if (value) {
            if (value.isClass) {
                value = {
                    module: value,
                    url   : this.storeUrl
                };
            } else if (Neo.isObject(value)) {
                value.url = this.storeUrl;
            }
        }

        return super.beforeSetStore(value, oldValue);
    }

    /**
     * @param {Object} record
     */
    createItemContent(record) {
        let basePath;

        if (Neo.config.isGitHubPages) {
            basePath = '../../../../resources/website/examples';

            if (Neo.config.environment !== 'development') {
                basePath = '../../' + basePath;
            }
        } else {
            basePath = 'https://raw.githubusercontent.com/neomjs/pages/master/resources/website/examples';
        }

        return [
            {cls: ['content'], cn: [
                {cls: ['neo-full-size', 'preview-image'], style: {
                    backgroundImage: `url('${basePath}/${record.image}'), linear-gradient(#777, #333)`}
                },
                {cls: ['neo-relative'], cn: [
                    {cls: ['neo-absolute', 'neo-item-bottom-position'], cn: [
                        {tag: 'a', cls: ['neo-title'], href: record.url, target: '_blank', cn: [
                            {html: record.name.replace(List.nameRegEx, "$1")}
                        ]},
                        {cls: ['neo-top-20'], cn: [
                            {tag: 'a', cls: ['fab fa-github', 'neo-github-image'], href: record.sourceUrl, target: '_blank'},
                            {cls: ['neo-inner-content'], cn: [
                                {cls: ['neo-inner-details'], html: record.browsers.join(', ')},
                                {cls: ['neo-inner-details'], html: record.environments.join(', ')}
                            ]}
                        ]}
                    ]}
                ]}
            ]}
        ];
    }

    /**
     * @returns {Object}
     */
    getVdomRoot() {
        return this.vdom.cn[0];
    }

    /**
     * @returns {Object}
     */
    getVnodeRoot() {
        return this.vnode.childNodes[0];
    }
}

Neo.applyClassConfig(List);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (List);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,