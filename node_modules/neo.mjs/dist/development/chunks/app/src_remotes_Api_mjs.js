"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["src_remotes_Api_mjs"],{

/***/ "./src/remotes/Api.mjs":
/*!*****************************!*\
  !*** ./src/remotes/Api.mjs ***!
  \*****************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Base.mjs */ "./src/core/Base.mjs");


/**
 * @class Neo.remotes.Api
 * @extends Neo.core.Base
 * @singleton
 */
class Api extends _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static getConfig() {return {
        /**
         * @member {String} className='Neo.remotes.Api'
         * @protected
         */
        className: 'Neo.remotes.Api',
        /**
         * @member {Boolean} singleton=true
         * @protected
         */
        singleton: true
    }}

    /**
     * @param {String} service
     * @param {String} method
     * @returns {function(*=, *=): Promise<any>}
     */
    generateRemote(service, method) {
        return function(...args) {
            return Neo.currentWorker.promiseMessage('data', {
                action: 'rpc',
                method,
                params: [...args],
                service
            })
        }
    }

    /**
     *
     */
    load() {
        let config = Neo.config,
            path   = config.remotesApiUrl;

        // relative paths need a special treatment
        if (!path.includes('http')) {
            path = config.appPath.split('/');
            path.pop();
            path = `../../${path.join('/')}/${config.remotesApiUrl}`;
        }

        fetch(path)
            .then(response => response.json())
            .then(data => {this.register(data)})
    }

    /**
     * @param {Object} data
     */
    register(data) {
        let method, ns, service;

        for (service of data.services) {
            for (method of service.methods) {
                ns = Neo.ns(`${data.namespace}.${service.name}`, true);
                ns[method.name] = this.generateRemote(service.name, method.name);
            }
        }
    }
}

Neo.applyClassConfig(Api);

let instance = Neo.create(Api);

Neo.applyToGlobalNs(instance);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (instance);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2h1bmtzL2FwcC9zcmNfcmVtb3Rlc19BcGlfbWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQW9DOztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHNEQUFJO0FBQ3RCLHdCQUF3QjtBQUN4QjtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLFFBQVE7QUFDdkIsZUFBZSxRQUFRO0FBQ3ZCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGVBQWUsR0FBRyxxQkFBcUI7QUFDbkU7O0FBRUE7QUFDQTtBQUNBLDJCQUEyQixvQkFBb0I7QUFDL0M7O0FBRUE7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSwrQkFBK0IsZUFBZSxHQUFHLGFBQWE7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQSxpRUFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZW8ubWpzLy4vc3JjL3JlbW90ZXMvQXBpLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFzZSBmcm9tICcuLi9jb3JlL0Jhc2UubWpzJztcblxuLyoqXG4gKiBAY2xhc3MgTmVvLnJlbW90ZXMuQXBpXG4gKiBAZXh0ZW5kcyBOZW8uY29yZS5CYXNlXG4gKiBAc2luZ2xldG9uXG4gKi9cbmNsYXNzIEFwaSBleHRlbmRzIEJhc2Uge1xuICAgIHN0YXRpYyBnZXRDb25maWcoKSB7cmV0dXJuIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBtZW1iZXIge1N0cmluZ30gY2xhc3NOYW1lPSdOZW8ucmVtb3Rlcy5BcGknXG4gICAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAgICovXG4gICAgICAgIGNsYXNzTmFtZTogJ05lby5yZW1vdGVzLkFwaScsXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBAbWVtYmVyIHtCb29sZWFufSBzaW5nbGV0b249dHJ1ZVxuICAgICAgICAgKiBAcHJvdGVjdGVkXG4gICAgICAgICAqL1xuICAgICAgICBzaW5nbGV0b246IHRydWVcbiAgICB9fVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHNlcnZpY2VcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gbWV0aG9kXG4gICAgICogQHJldHVybnMge2Z1bmN0aW9uKCo9LCAqPSk6IFByb21pc2U8YW55Pn1cbiAgICAgKi9cbiAgICBnZW5lcmF0ZVJlbW90ZShzZXJ2aWNlLCBtZXRob2QpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uKC4uLmFyZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiBOZW8uY3VycmVudFdvcmtlci5wcm9taXNlTWVzc2FnZSgnZGF0YScsIHtcbiAgICAgICAgICAgICAgICBhY3Rpb246ICdycGMnLFxuICAgICAgICAgICAgICAgIG1ldGhvZCxcbiAgICAgICAgICAgICAgICBwYXJhbXM6IFsuLi5hcmdzXSxcbiAgICAgICAgICAgICAgICBzZXJ2aWNlXG4gICAgICAgICAgICB9KVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBsb2FkKCkge1xuICAgICAgICBsZXQgY29uZmlnID0gTmVvLmNvbmZpZyxcbiAgICAgICAgICAgIHBhdGggICA9IGNvbmZpZy5yZW1vdGVzQXBpVXJsO1xuXG4gICAgICAgIC8vIHJlbGF0aXZlIHBhdGhzIG5lZWQgYSBzcGVjaWFsIHRyZWF0bWVudFxuICAgICAgICBpZiAoIXBhdGguaW5jbHVkZXMoJ2h0dHAnKSkge1xuICAgICAgICAgICAgcGF0aCA9IGNvbmZpZy5hcHBQYXRoLnNwbGl0KCcvJyk7XG4gICAgICAgICAgICBwYXRoLnBvcCgpO1xuICAgICAgICAgICAgcGF0aCA9IGAuLi8uLi8ke3BhdGguam9pbignLycpfS8ke2NvbmZpZy5yZW1vdGVzQXBpVXJsfWA7XG4gICAgICAgIH1cblxuICAgICAgICBmZXRjaChwYXRoKVxuICAgICAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxuICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7dGhpcy5yZWdpc3RlcihkYXRhKX0pXG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQHBhcmFtIHtPYmplY3R9IGRhdGFcbiAgICAgKi9cbiAgICByZWdpc3RlcihkYXRhKSB7XG4gICAgICAgIGxldCBtZXRob2QsIG5zLCBzZXJ2aWNlO1xuXG4gICAgICAgIGZvciAoc2VydmljZSBvZiBkYXRhLnNlcnZpY2VzKSB7XG4gICAgICAgICAgICBmb3IgKG1ldGhvZCBvZiBzZXJ2aWNlLm1ldGhvZHMpIHtcbiAgICAgICAgICAgICAgICBucyA9IE5lby5ucyhgJHtkYXRhLm5hbWVzcGFjZX0uJHtzZXJ2aWNlLm5hbWV9YCwgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgbnNbbWV0aG9kLm5hbWVdID0gdGhpcy5nZW5lcmF0ZVJlbW90ZShzZXJ2aWNlLm5hbWUsIG1ldGhvZC5uYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuTmVvLmFwcGx5Q2xhc3NDb25maWcoQXBpKTtcblxubGV0IGluc3RhbmNlID0gTmVvLmNyZWF0ZShBcGkpO1xuXG5OZW8uYXBwbHlUb0dsb2JhbE5zKGluc3RhbmNlKTtcblxuZXhwb3J0IGRlZmF1bHQgaW5zdGFuY2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=