(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["vendors-examples_component_dateSelector_app_mjs-src_selection_Model_mjs"],{

/***/ "./examples/component/dateSelector/MainContainer.mjs":
/*!***********************************************************!*\
  !*** ./examples/component/dateSelector/MainContainer.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ MainContainer)
/* harmony export */ });
/* harmony import */ var _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../src/form/field/CheckBox.mjs */ "./src/form/field/CheckBox.mjs");
/* harmony import */ var _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../ConfigurationViewport.mjs */ "./examples/ConfigurationViewport.mjs");
/* harmony import */ var _src_component_DateSelector_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/component/DateSelector.mjs */ "./src/component/DateSelector.mjs");
/* harmony import */ var _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../src/form/field/Radio.mjs */ "./src/form/field/Radio.mjs");
/* harmony import */ var _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../src/form/field/Number.mjs */ "./src/form/field/Number.mjs");






/**
 * @class Neo.examples.component.dateSelector.MainContainer
 * @extends Neo.examples.ConfigurationViewport
 */
class MainContainer extends _ConfigurationViewport_mjs__WEBPACK_IMPORTED_MODULE_1__.default {
    static getConfig() {return {
        className: 'Neo.examples.component.dateSelector.MainContainer'
    }}

    createConfigurationComponents() {
        let me = this;

        return [{
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.currentDate.getMonth() === 0,
            hideValueLabel: false,
            labelText     : 'currentDate (month)',
            listeners     : {change: me.onMonthRadioChange.bind(me, 0)},
            name          : 'month',
            valueLabelText: 'Jan'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.currentDate.getMonth() === 1,
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onMonthRadioChange.bind(me, 1)},
            name          : 'month',
            valueLabelText: 'Feb'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.currentDate.getMonth() === 2,
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onMonthRadioChange.bind(me, 2)},
            name          : 'month',
            valueLabelText: 'Mar'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.currentDate.getMonth() === 3,
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onMonthRadioChange.bind(me, 3)},
            name          : 'month',
            valueLabelText: 'Apr'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.currentDate.getFullYear() === 2021,
            hideValueLabel: false,
            labelText     : 'currentDate (year)',
            listeners     : {change: me.onYearRadioChange.bind(me, 2021)},
            name          : 'year',
            style         : {marginTop: '10px'},
            valueLabelText: '2021'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.currentDate.getFullYear() === 2020,
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onYearRadioChange.bind(me, 2020)},
            name          : 'year',
            valueLabelText: '2020'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.currentDate.getFullYear() === 2019,
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onYearRadioChange.bind(me, 2019)},
            name          : 'year',
            valueLabelText: '2019'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.currentDate.getFullYear() === 2018,
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onYearRadioChange.bind(me, 2018)},
            name          : 'year',
            valueLabelText: '2018'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.dayNameFormat === 'narrow',
            hideValueLabel: false,
            labelText     : 'dayNameFormat',
            listeners     : {change: me.onRadioChange.bind(me, 'dayNameFormat', 'narrow')},
            name          : 'dayNameFormat',
            style         : {marginTop: '10px'},
            valueLabelText: 'narrow'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.dayNameFormat === 'short',
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onRadioChange.bind(me, 'dayNameFormat', 'short')},
            name          : 'dayNameFormat',
            valueLabelText: 'short'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.dayNameFormat === 'long',
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onRadioChange.bind(me, 'dayNameFormat', 'long')},
            name          : 'dayNameFormat',
            valueLabelText: 'long'
        }, {
            module    :  _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_4__.default,
            clearable : true,
            labelText : 'height',
            listeners : {change: me.onConfigChange.bind(me, 'height')},
            maxValue  : 800,
            minValue  : 230,
            stepSize  : 10,
            style     : {marginTop: '10px'},
            value     : me.exampleComponent.height
        }, {
            module   : _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__.default,
            checked  : me.exampleComponent.showCellBorders,
            labelText: 'showCellBorders',
            listeners: {change: me.onConfigChange.bind(me, 'showCellBorders')},
            style    : {marginTop: '10px'}
        }, {
            module   : _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__.default,
            checked  : me.exampleComponent.showDisabledDays,
            labelText: 'showDisabledDays',
            listeners: {change: me.onConfigChange.bind(me, 'showDisabledDays')},
            style    : {marginTop: '10px'}
        }, {
            module   : _src_form_field_CheckBox_mjs__WEBPACK_IMPORTED_MODULE_0__.default,
            checked  : me.exampleComponent.useAnimations,
            labelText: 'useAnimations',
            listeners: {change: me.onConfigChange.bind(me, 'useAnimations')},
            style    : {marginTop: '10px'}
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.weekStartDay === 6,
            hideValueLabel: false,
            labelText     : 'weekStartDay',
            listeners     : {change: me.onRadioChange.bind(me, 'weekStartDay', 6)},
            name          : 'weekStartDay',
            style         : {marginTop: '10px'},
            valueLabelText: '6 (Saturday)'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.weekStartDay === 0,
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onRadioChange.bind(me, 'weekStartDay', 0)},
            name          : 'weekStartDay',
            valueLabelText: '0 (Sunday)'
        }, {
            module        : _src_form_field_Radio_mjs__WEBPACK_IMPORTED_MODULE_3__.default,
            checked       : me.exampleComponent.weekStartDay === 1,
            hideValueLabel: false,
            labelText     : '',
            listeners     : {change: me.onRadioChange.bind(me, 'weekStartDay', 1)},
            name          : 'weekStartDay',
            valueLabelText: '1 (Monday)'
        }, {
            module    :  _src_form_field_Number_mjs__WEBPACK_IMPORTED_MODULE_4__.default,
            clearable : true,
            labelText : 'width',
            listeners : {change: me.onConfigChange.bind(me, 'width')},
            maxValue  : 800,
            minValue  : 240,
            stepSize  : 10,
            style     : {marginTop: '10px'},
            value     : me.exampleComponent.width
        }];
    }

    createExampleComponent() {
        return Neo.create(_src_component_DateSelector_mjs__WEBPACK_IMPORTED_MODULE_2__.default, {
            height: 300,
            width : 300
        });
    }

    onMonthRadioChange(value, opts) {
        if (opts.value === true) { // we only want to listen to check events, not uncheck
            let date = this.exampleComponent.currentDate;
            date.setMonth(value);
            this.exampleComponent.currentDate = date;
        }
    }

    onYearRadioChange(value, opts) {
        if (opts.value === true) { // we only want to listen to check events, not uncheck
            let date = this.exampleComponent.currentDate;
            date.setFullYear(value);
            this.exampleComponent.currentDate = date;
        }
    }
}

Neo.applyClassConfig(MainContainer);



/***/ }),

/***/ "./examples/component/dateSelector/app.mjs":
/*!*************************************************!*\
  !*** ./examples/component/dateSelector/app.mjs ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "onStart": () => (/* binding */ onStart)
/* harmony export */ });
/* harmony import */ var _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MainContainer.mjs */ "./examples/component/dateSelector/MainContainer.mjs");


const onStart = () => Neo.app({
    mainView: _MainContainer_mjs__WEBPACK_IMPORTED_MODULE_0__.default,
    name    : 'Neo.examples.component.dateSelector'
});



/***/ }),

/***/ "./src/selection/Model.mjs":
/*!*********************************!*\
  !*** ./src/selection/Model.mjs ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Model)
/* harmony export */ });
/* harmony import */ var _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Base.mjs */ "./src/core/Base.mjs");
/* harmony import */ var _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/Array.mjs */ "./src/util/Array.mjs");
/* harmony import */ var _core_Observable_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/Observable.mjs */ "./src/core/Observable.mjs");




/**
 * @class Neo.selection.Model
 * @extends Neo.core.Base
 */
class Model extends _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__.default {
    static getStaticConfig() {return {
        /**
         * True automatically applies the core/Observable.mjs mixin
         * @member {Boolean} observable=true
         * @static
         */
        observable: true
    }}

    static getConfig() {return {
        /**
         * @member {String} className='Neo.selection.Model'
         * @protected
         */
        className: 'Neo.selection.Model',
        /**
         * @member {String} ntype='selection-model'
         * @protected
         */
        ntype: 'selection-model',
        /**
         * Placeholder for extended classes to add a custom css rule to this owner component
         * @member {String|null} cls=null
         * @protected
         */
        cls: null,
        /**
         * @member {Array} items=[]
         * @protected
         */
        items: [],
        /**
         * @member {String} selectedCls='selected'
         */
        selectedCls: 'neo-selected',
        /**
         * @member {Boolean} singleSelect=true
         */
        singleSelect: true,
        /**
         * Internally saves the view id, but the getter will return the matching instance
         * @member {Object} view_=null
         * @protected
         */
        view_: null
    }}

    /**
     * Gets triggered before getting the value of the view config
     * @returns {Neo.component.Base}
     */
    beforeGetView() {
        return Neo.getComponent(this._view);
    }

    /**
     * Gets triggered before setting the value of the view config
     * @returns {String} the view id
     */
    beforeSetView(value) {
        return value && value.id;
    }

    /**
     *
     */
    addDomListener() {}

    /**
     *
     * @param {Object} item
     * @param {Boolean} [silent] true to prevent a vdom update
     * @param {Array} [itemCollection]
     * @param {String} [selectedCls]
     */
    deselect(item, silent, itemCollection, selectedCls) {
        let me   = this,
            view = me.view,
            vdom = view.vdom,
            node = view.getVdomChild(item), // todo: support for nodes (right now limited to ids)
            cls;

        if (node) {
            cls = node.cls || [];
            _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__.default.remove(cls, selectedCls || me.selectedCls);
            node.cls = cls;
        }

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__.default.remove(itemCollection || me.items, item);

        if (!silent) {
            view.vdom = vdom;
        }
    }

    /**
     *
     * @param {Boolean} [silent] true to prevent a vdom update
     */
    deselectAll(silent) {
        let me    = this,
            items = [...me.items],
            view  = me.view,
            vdom  = view.vdom;

        items.forEach(item => {
            me.deselect(item, true);
        });

        if (!silent && items.length > 0) {
            view.vdom = vdom;
        }
    }

    /**
     *
     */
    destroy() {
        this.unregister();
        super.destroy();
    }

    /**
     *
     * @returns {Array} this.items
     */
    getSelection() {
        return this.items;
    }

    /**
     *
     * @returns {Boolean} true in case there is a selection
     */
    hasSelection() {
        return this.items.length > 0;
    }

    /**
     *
     * @param {String} id
     * @returns {Boolean} true in case the item is selected
     */
    isSelected(id) {
        return this.items.indexOf(id) > -1;
    }

    /**
     *
     * @param {Neo.component.Base} component
     */
    register(component) {
        let me  = this,
            cls = component.cls || [];

        if (me.cls && !cls.includes(me.cls)) {
            cls.push(me.cls);
            component.cls = cls;
        }

        me.view = component;
        me.addDomListener();
    }

    /**
     *
     */
    removeDomListeners() {
        let me           = this,
            component    = me.view,
            domListeners = [...component.domListeners];

        component.domListeners.forEach(listener => {
            if (listener.scope === me) {
                _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__.default.remove(domListeners, listener);
            }
        });

        component.domListeners = domListeners;
    }

    /**
     *
     * @param {Object|Object[]|String[]} items
     * @param {Array} [itemCollection]
     * @param {String} [selectedCls]
     */
    select(items, itemCollection, selectedCls) {
        items = Array.isArray(items) ? items : [items];

        let me   = this,
            view = me.view,
            vdom = view.vdom,
            cls;

        if (me.singleSelect) {
            me.deselectAll(true);
        }

        items.forEach(node => {
            if (typeof node === 'string') {
                node = view.getVdomChild(node);
            }

            if (node) {
                cls = node.cls || [];
                _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__.default.add(cls, selectedCls || me.selectedCls);
                node.cls = cls;
            }
        });

        _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__.default.add(itemCollection || me.items, items);

        view[view.hasOwnProperty('silentSelect') && view.silentSelect === true ? '_vdom' : 'vdom'] = vdom;
    }

    /**
     *
     * @param {Object} item
     */
    toggleSelection(item) {
        let me = this;

        if (me.isSelected(item)) {
            me.deselect(item);
        } else {
            me.select(item);
        }
    }

    /**
     *
     */
    unregister() {
        let me  = this,
            cls = me.view.cls || [];

        if (me.cls && cls.includes(me.cls)) {
            _util_Array_mjs__WEBPACK_IMPORTED_MODULE_1__.default.remove(cls, me.cls);
            me.view.cls = cls;
        }

        me.deselectAll();

        me.removeDomListeners();
    }
}

Neo.applyClassConfig(Model);



/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,