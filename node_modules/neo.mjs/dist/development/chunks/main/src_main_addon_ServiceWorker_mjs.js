"use strict";
(self["webpackChunkneo_mjs"] = self["webpackChunkneo_mjs"] || []).push([["src_main_addon_ServiceWorker_mjs"],{

/***/ "./src/main/addon/ServiceWorker.mjs":
/*!******************************************!*\
  !*** ./src/main/addon/ServiceWorker.mjs ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/Base.mjs */ "./src/core/Base.mjs");
/* harmony import */ var _worker_mixin_RemoteMethodAccess_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../worker/mixin/RemoteMethodAccess.mjs */ "./src/worker/mixin/RemoteMethodAccess.mjs");
/* harmony import */ var _worker_Manager_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../worker/Manager.mjs */ "./src/worker/Manager.mjs");




/**
 * Creates a ServiceWorker instance, in case Neo.config.useServiceWorker is set to true
 * @class Neo.main.addon.ServiceWorker
 * @extends Neo.core.Base
 * @singleton
 */
class ServiceWorker extends _core_Base_mjs__WEBPACK_IMPORTED_MODULE_0__["default"] {
    static getConfig() {return {
        /**
         * @member {String} className='Neo.main.addon.ServiceWorker'
         * @protected
         */
        className: 'Neo.main.addon.ServiceWorker',
        /**
         * @member {String[]|Neo.core.Base[]|null} mixins=[RemoteMethodAccess]
         */
        mixins: [_worker_mixin_RemoteMethodAccess_mjs__WEBPACK_IMPORTED_MODULE_1__["default"]],
        /**
         * @member {ServiceWorkerRegistration|null} registration=null
         * @protected
         */
        registration: null,
        /**
         * @member {Boolean} singleton=true
         * @protected
         */
        singleton: true
    }}

    /**
     * @param {Object} config
     */
    construct(config) {
        if ('serviceWorker' in navigator) {
            let me            = this,
                config        = Neo.config,
                devMode       = config.environment === 'development',
                fileName      = devMode ? 'ServiceWorker.mjs' : 'serviceworker.js',
                folder        = window.location.pathname.includes('/examples/') ? 'examples/' : 'apps/',
                opts          = devMode ? {type: 'module'} : {},
                serviceWorker = navigator.serviceWorker;

            serviceWorker.register(config.basePath + folder + fileName, opts)
                .then(registration => {
                    me.registration = registration;

                    serviceWorker.ready.then(() => {
                        serviceWorker.onmessage = _worker_Manager_mjs__WEBPACK_IMPORTED_MODULE_2__["default"].onWorkerMessage.bind(_worker_Manager_mjs__WEBPACK_IMPORTED_MODULE_2__["default"]);

                        _worker_Manager_mjs__WEBPACK_IMPORTED_MODULE_2__["default"].sendMessage('service', {
                            action     : 'registerNeoConfig',
                            channelPort: registration.active,
                            data       : config
                        });
                    });
                })
        }
    }
}

Neo.applyClassConfig(ServiceWorker);

let instance = Neo.create(ServiceWorker);

Neo.applyToGlobalNs(instance);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (instance);


/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2h1bmtzL21haW4vc3JjX21haW5fYWRkb25fU2VydmljZVdvcmtlcl9tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUFxRDtBQUNzQjtBQUNqQjs7QUFFMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHNEQUFJO0FBQ2hDLHdCQUF3QjtBQUN4QjtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLCtCQUErQjtBQUNuRDtBQUNBLGlCQUFpQiw0RUFBa0I7QUFDbkM7QUFDQSxvQkFBb0IsZ0NBQWdDO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxlQUFlLFFBQVE7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxnQkFBZ0IsSUFBSTtBQUMvRDs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrREFBa0QsZ0ZBQWtDLENBQUMsMkRBQWE7O0FBRWxHLHdCQUF3Qix1RUFBeUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBLGlFQUFlLFFBQVEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25lby5tanMvLi9zcmMvbWFpbi9hZGRvbi9TZXJ2aWNlV29ya2VyLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFzZSAgICAgICAgICAgICAgIGZyb20gJy4uLy4uL2NvcmUvQmFzZS5tanMnO1xuaW1wb3J0IFJlbW90ZU1ldGhvZEFjY2VzcyBmcm9tICcuLi8uLi93b3JrZXIvbWl4aW4vUmVtb3RlTWV0aG9kQWNjZXNzLm1qcyc7XG5pbXBvcnQgV29ya2VyTWFuYWdlciAgICAgIGZyb20gJy4uLy4uL3dvcmtlci9NYW5hZ2VyLm1qcyc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIFNlcnZpY2VXb3JrZXIgaW5zdGFuY2UsIGluIGNhc2UgTmVvLmNvbmZpZy51c2VTZXJ2aWNlV29ya2VyIGlzIHNldCB0byB0cnVlXG4gKiBAY2xhc3MgTmVvLm1haW4uYWRkb24uU2VydmljZVdvcmtlclxuICogQGV4dGVuZHMgTmVvLmNvcmUuQmFzZVxuICogQHNpbmdsZXRvblxuICovXG5jbGFzcyBTZXJ2aWNlV29ya2VyIGV4dGVuZHMgQmFzZSB7XG4gICAgc3RhdGljIGdldENvbmZpZygpIHtyZXR1cm4ge1xuICAgICAgICAvKipcbiAgICAgICAgICogQG1lbWJlciB7U3RyaW5nfSBjbGFzc05hbWU9J05lby5tYWluLmFkZG9uLlNlcnZpY2VXb3JrZXInXG4gICAgICAgICAqIEBwcm90ZWN0ZWRcbiAgICAgICAgICovXG4gICAgICAgIGNsYXNzTmFtZTogJ05lby5tYWluLmFkZG9uLlNlcnZpY2VXb3JrZXInLFxuICAgICAgICAvKipcbiAgICAgICAgICogQG1lbWJlciB7U3RyaW5nW118TmVvLmNvcmUuQmFzZVtdfG51bGx9IG1peGlucz1bUmVtb3RlTWV0aG9kQWNjZXNzXVxuICAgICAgICAgKi9cbiAgICAgICAgbWl4aW5zOiBbUmVtb3RlTWV0aG9kQWNjZXNzXSxcbiAgICAgICAgLyoqXG4gICAgICAgICAqIEBtZW1iZXIge1NlcnZpY2VXb3JrZXJSZWdpc3RyYXRpb258bnVsbH0gcmVnaXN0cmF0aW9uPW51bGxcbiAgICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICAgKi9cbiAgICAgICAgcmVnaXN0cmF0aW9uOiBudWxsLFxuICAgICAgICAvKipcbiAgICAgICAgICogQG1lbWJlciB7Qm9vbGVhbn0gc2luZ2xldG9uPXRydWVcbiAgICAgICAgICogQHByb3RlY3RlZFxuICAgICAgICAgKi9cbiAgICAgICAgc2luZ2xldG9uOiB0cnVlXG4gICAgfX1cblxuICAgIC8qKlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBjb25maWdcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3QoY29uZmlnKSB7XG4gICAgICAgIGlmICgnc2VydmljZVdvcmtlcicgaW4gbmF2aWdhdG9yKSB7XG4gICAgICAgICAgICBsZXQgbWUgICAgICAgICAgICA9IHRoaXMsXG4gICAgICAgICAgICAgICAgY29uZmlnICAgICAgICA9IE5lby5jb25maWcsXG4gICAgICAgICAgICAgICAgZGV2TW9kZSAgICAgICA9IGNvbmZpZy5lbnZpcm9ubWVudCA9PT0gJ2RldmVsb3BtZW50JyxcbiAgICAgICAgICAgICAgICBmaWxlTmFtZSAgICAgID0gZGV2TW9kZSA/ICdTZXJ2aWNlV29ya2VyLm1qcycgOiAnc2VydmljZXdvcmtlci5qcycsXG4gICAgICAgICAgICAgICAgZm9sZGVyICAgICAgICA9IHdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZS5pbmNsdWRlcygnL2V4YW1wbGVzLycpID8gJ2V4YW1wbGVzLycgOiAnYXBwcy8nLFxuICAgICAgICAgICAgICAgIG9wdHMgICAgICAgICAgPSBkZXZNb2RlID8ge3R5cGU6ICdtb2R1bGUnfSA6IHt9LFxuICAgICAgICAgICAgICAgIHNlcnZpY2VXb3JrZXIgPSBuYXZpZ2F0b3Iuc2VydmljZVdvcmtlcjtcblxuICAgICAgICAgICAgc2VydmljZVdvcmtlci5yZWdpc3Rlcihjb25maWcuYmFzZVBhdGggKyBmb2xkZXIgKyBmaWxlTmFtZSwgb3B0cylcbiAgICAgICAgICAgICAgICAudGhlbihyZWdpc3RyYXRpb24gPT4ge1xuICAgICAgICAgICAgICAgICAgICBtZS5yZWdpc3RyYXRpb24gPSByZWdpc3RyYXRpb247XG5cbiAgICAgICAgICAgICAgICAgICAgc2VydmljZVdvcmtlci5yZWFkeS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlcnZpY2VXb3JrZXIub25tZXNzYWdlID0gV29ya2VyTWFuYWdlci5vbldvcmtlck1lc3NhZ2UuYmluZChXb3JrZXJNYW5hZ2VyKTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgV29ya2VyTWFuYWdlci5zZW5kTWVzc2FnZSgnc2VydmljZScsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb24gICAgIDogJ3JlZ2lzdGVyTmVvQ29uZmlnJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFubmVsUG9ydDogcmVnaXN0cmF0aW9uLmFjdGl2ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhICAgICAgIDogY29uZmlnXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgIH1cbn1cblxuTmVvLmFwcGx5Q2xhc3NDb25maWcoU2VydmljZVdvcmtlcik7XG5cbmxldCBpbnN0YW5jZSA9IE5lby5jcmVhdGUoU2VydmljZVdvcmtlcik7XG5cbk5lby5hcHBseVRvR2xvYmFsTnMoaW5zdGFuY2UpO1xuXG5leHBvcnQgZGVmYXVsdCBpbnN0YW5jZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==